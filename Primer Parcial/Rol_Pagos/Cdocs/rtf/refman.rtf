{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Rol de Pago  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 \par
}}Rol de Pago}
{\comment Generado por doxygen 1.9.5.}
{\creatim \yr2022\mo11\dy30\hr5\min22\sec56}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Rol de Pago}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Versi\'F3n 1\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Mi\'E9rcoles, 30 de Noviembre de 2022 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Tabla de contenidos\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indice jer\'E1rquico\par \pard\plain 
{\tc \v Indice jer\'E1rquico}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Jerarqu\'EDa de la clase\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta lista de herencias esta ordenada aproximadamente por orden alfab\'E9tico:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ControladorRegistro\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ControladorReportes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ListaCircularDoble< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Menu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Nodo_Doble< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Persona\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEA \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Empleado\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RolDePago\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Validacion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice de clases\par \pard\plain 
{\tc \v \'CDndice de clases}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de clases\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de las clases, estructuras, uniones e interfaces con una breve descripci\'F3n:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b ControladorRegistro} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ControladorReportes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Empleado} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaCircularDoble< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Menu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Nodo_Doble< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Persona} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RolDePago} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Validacion} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indice de archivos\par \pard\plain 
{\tc \v Indice de archivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de archivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de todos los archivos con descripciones breves:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b ControladorRegistro.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b ControladorRegistro.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b ControladorReportes.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b ControladorReportes.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Definiciones.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Empleado.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Empleado.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b ListaCircularDoble.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Menu.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Menu.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Nodo_Doble.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Persona.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Persona.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b RolDePago.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b RolDePago.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Validacion.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentaci\'F3n de las clases{\tc \v Documentaci\'F3n de las clases}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase ControladorRegistro\par \pard\plain 
{\tc\tcl2 \v ControladorRegistro}
{\xe \v ControladorRegistro}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
{
{\f2 #include <ControladorRegistro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b registrarEmpleado} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b registrarRolPago} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaCircularDoble}< {\b Empleado} > {\b leerClientes} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b guardarEmpleado} ({\b Empleado} empleadoLC)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaCircularDoble}< {\b RolDePago} > {\b leerRolDePago} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b guardarRolDePago} ({\b RolDePago} roldepagoLC)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definici\'F3n en la l\'EDnea {\b 5} del archivo {\b ControladorRegistro.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v guardarEmpleado\:ControladorRegistro}
{\xe \v ControladorRegistro\:guardarEmpleado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ControladorRegistro::guardarEmpleado ({\b Empleado}  {\i empleadoLC})}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 115} del archivo {\b ControladorRegistro.cpp}.}\par
}
{\xe \v guardarRolDePago\:ControladorRegistro}
{\xe \v ControladorRegistro\:guardarRolDePago}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ControladorRegistro::guardarRolDePago ({\b RolDePago}  {\i roldepagoLC})}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 161} del archivo {\b ControladorRegistro.cpp}.}\par
}
{\xe \v leerClientes\:ControladorRegistro}
{\xe \v ControladorRegistro\:leerClientes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaCircularDoble}< {\b Empleado} > ControladorRegistro::leerClientes ()}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 97} del archivo {\b ControladorRegistro.cpp}.}\par
}
{\xe \v leerRolDePago\:ControladorRegistro}
{\xe \v ControladorRegistro\:leerRolDePago}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaCircularDoble}< {\b RolDePago} > ControladorRegistro::leerRolDePago ()}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 128} del archivo {\b ControladorRegistro.cpp}.}\par
}
{\xe \v registrarEmpleado\:ControladorRegistro}
{\xe \v ControladorRegistro\:registrarEmpleado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ControladorRegistro::registrarEmpleado ()}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 10} del archivo {\b ControladorRegistro.cpp}.}\par
}
{\xe \v registrarRolPago\:ControladorRegistro}
{\xe \v ControladorRegistro\:registrarRolPago}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ControladorRegistro::registrarRolPago ()}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 53} del archivo {\b ControladorRegistro.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir de los siguientes ficheros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b ControladorRegistro.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b ControladorRegistro.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase ControladorReportes\par \pard\plain 
{\tc\tcl2 \v ControladorReportes}
{\xe \v ControladorReportes}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
{
{\f2 #include <ControladorReportes.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarPersonal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarRolDePago} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b buscarRolDePago} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b buscarPersonal} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definici\'F3n en la l\'EDnea {\b 3} del archivo {\b ControladorReportes.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v buscarPersonal\:ControladorReportes}
{\xe \v ControladorReportes\:buscarPersonal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ControladorReportes::buscarPersonal ()}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 98} del archivo {\b ControladorReportes.cpp}.}\par
}
{\xe \v buscarRolDePago\:ControladorReportes}
{\xe \v ControladorReportes\:buscarRolDePago}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ControladorReportes::buscarRolDePago ()}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 47} del archivo {\b ControladorReportes.cpp}.}\par
}
{\xe \v mostrarPersonal\:ControladorReportes}
{\xe \v ControladorReportes\:mostrarPersonal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ControladorReportes::mostrarPersonal ()}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 11} del archivo {\b ControladorReportes.cpp}.}\par
}
{\xe \v mostrarRolDePago\:ControladorReportes}
{\xe \v ControladorReportes\:mostrarRolDePago}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ControladorReportes::mostrarRolDePago ()}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 24} del archivo {\b ControladorReportes.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir de los siguientes ficheros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b ControladorReportes.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b ControladorReportes.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase Empleado\par \pard\plain 
{\tc\tcl2 \v Empleado}
{\xe \v Empleado}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
{
{\f2 #include <Empleado.h>}}\par
Diagrama de herencias de Empleado{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_empleado.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Empleado} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Empleado} (std::string, std::string, std::string, std::string)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Empleado} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_cargo} (std::string)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b get_cargo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirDatos} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b toString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definici\'F3n en la l\'EDnea {\b 6} del archivo {\b Empleado.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v Empleado\:Empleado}
{\xe \v Empleado\:Empleado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Empleado::Empleado (void )}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 9} del archivo {\b Empleado.cpp}.}\par
}
{\xe \v Empleado\:Empleado}
{\xe \v Empleado\:Empleado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Empleado::Empleado (std::string , std::string , std::string , std::string )}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Empleado\:Empleado}
{\xe \v Empleado\:~Empleado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Empleado::~Empleado (void )}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 19} del archivo {\b Empleado.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v get_cargo\:Empleado}
{\xe \v Empleado\:get_cargo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Empleado::get_cargo ()}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 30} del archivo {\b Empleado.cpp}.}\par
}
{\xe \v imprimirDatos\:Empleado}
{\xe \v Empleado\:imprimirDatos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Empleado::imprimirDatos ()}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 35} del archivo {\b Empleado.cpp}.}\par
}
{\xe \v set_cargo\:Empleado}
{\xe \v Empleado\:set_cargo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Empleado::set_cargo (std::string )}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 24} del archivo {\b Empleado.cpp}.}\par
}
{\xe \v toString\:Empleado}
{\xe \v Empleado\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Empleado::toString ()}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 43} del archivo {\b Empleado.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir de los siguientes ficheros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Empleado.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Empleado.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la plantilla de la Clase ListaCircularDoble< T >\par \pard\plain 
{\tc\tcl2 \v ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >}
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\par
{
{\f2 #include <ListaCircularDoble.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaCircularDoble} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insertarFinal} (T dato)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insertarInicio} (T dato)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insertarPosicion} (int pos, T dat)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b eliminarPosicion} (int pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b eliminar} (std::function< bool(T dato)>)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b recorrer} (std::function< void(T dato)>)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b estaVacio} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b total} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Nodo_Doble}< T > * {\b getCabeza} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Nodo_Doble}< T > * {\b getCola} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Nodo_Doble}< T > * {\b getPosicion} (int pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Nodo_Doble}< T > * {\b buscar} (std::function< bool(T dato)>)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class ListaCircularDoble< T >\par
}
\par
{
Definici\'F3n en la l\'EDnea {\b 7} del archivo {\b ListaCircularDoble.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v ListaCircularDoble\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:ListaCircularDoble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b ListaCircularDoble}< T >{\b ::ListaCircularDoble}}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 32} del archivo {\b ListaCircularDoble.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v buscar\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:buscar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Nodo_Doble}< T > * {\b ListaCircularDoble}< T >::buscar (std::function< bool(T dato)>  {\i filtro})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 218} del archivo {\b ListaCircularDoble.h}.}\par
}
{\xe \v eliminar\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:eliminar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b ListaCircularDoble}< T >::eliminar (std::function< bool(T dato)>  {\i filtro})}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 153} del archivo {\b ListaCircularDoble.h}.}\par
}
{\xe \v eliminarPosicion\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:eliminarPosicion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b ListaCircularDoble}< T >::eliminarPosicion (int  {\i pos})}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 113} del archivo {\b ListaCircularDoble.h}.}\par
}
{\xe \v estaVacio\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:estaVacio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > bool {\b ListaCircularDoble}< T >::estaVacio}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 255} del archivo {\b ListaCircularDoble.h}.}\par
}
{\xe \v getCabeza\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:getCabeza}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Nodo_Doble}< T > * {\b ListaCircularDoble}< T >::getCabeza{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 173} del archivo {\b ListaCircularDoble.h}.}\par
}
{\xe \v getCola\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:getCola}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Nodo_Doble}< T > * {\b ListaCircularDoble}< T >::getCola}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 178} del archivo {\b ListaCircularDoble.h}.}\par
}
{\xe \v getPosicion\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:getPosicion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Nodo_Doble}< T > * {\b ListaCircularDoble}< T >::getPosicion (int  {\i pos})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 193} del archivo {\b ListaCircularDoble.h}.}\par
}
{\xe \v insertarFinal\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:insertarFinal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b ListaCircularDoble}< T >::insertarFinal (T  {\i dato})}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 37} del archivo {\b ListaCircularDoble.h}.}\par
}
{\xe \v insertarInicio\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:insertarInicio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b ListaCircularDoble}< T >::insertarInicio (T  {\i dato})}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 58} del archivo {\b ListaCircularDoble.h}.}\par
}
{\xe \v insertarPosicion\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:insertarPosicion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b ListaCircularDoble}< T >::insertarPosicion (int  {\i pos}, T  {\i dat})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 78} del archivo {\b ListaCircularDoble.h}.}\par
}
{\xe \v recorrer\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:recorrer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b ListaCircularDoble}< T >::recorrer (std::function< void(T dato)>  {\i llamada})}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 239} del archivo {\b ListaCircularDoble.h}.}\par
}
{\xe \v total\:ListaCircularDoble< T >}
{\xe \v ListaCircularDoble< T >\:total}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > int {\b ListaCircularDoble}< T >::total}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 260} del archivo {\b ListaCircularDoble.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir del siguiente fichero:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b ListaCircularDoble.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase Menu\par \pard\plain 
{\tc\tcl2 \v Menu}
{\xe \v Menu}
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\par
{
{\f2 #include <Menu.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menuPrincipaListaCircular} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menuAdministradorListaCircular} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menuOPAdminRegistroListaCircular} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menuOPAdminReportesListaCircular} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definici\'F3n en la l\'EDnea {\b 14} del archivo {\b Menu.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v menuAdministradorListaCircular\:Menu}
{\xe \v Menu\:menuAdministradorListaCircular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Menu::menuAdministradorListaCircular ()}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 49} del archivo {\b Menu.cpp}.}\par
}
{\xe \v menuOPAdminRegistroListaCircular\:Menu}
{\xe \v Menu\:menuOPAdminRegistroListaCircular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Menu::menuOPAdminRegistroListaCircular ()}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 82} del archivo {\b Menu.cpp}.}\par
}
{\xe \v menuOPAdminReportesListaCircular\:Menu}
{\xe \v Menu\:menuOPAdminReportesListaCircular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Menu::menuOPAdminReportesListaCircular ()}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 117} del archivo {\b Menu.cpp}.}\par
}
{\xe \v menuPrincipaListaCircular\:Menu}
{\xe \v Menu\:menuPrincipaListaCircular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Menu::menuPrincipaListaCircular ()}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 13} del archivo {\b Menu.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir de los siguientes ficheros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Menu.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Menu.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la plantilla de la Clase Nodo_Doble< T >\par \pard\plain 
{\tc\tcl2 \v Nodo_Doble< T >}
{\xe \v Nodo_Doble< T >}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
{
{\f2 #include <Nodo_Doble.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Nodo_Doble} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Nodo_Doble} (T nuvDato)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Nodo_Doble} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_dato} (T nuvDato)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_siguiente} ({\b Nodo_Doble}< T > *sig)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_anterior} ({\b Nodo_Doble}< T > *ant)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T {\b get_dato} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Nodo_Doble}< T > * {\b get_siguiente} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Nodo_Doble}< T > * {\b get_anterior} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class Nodo_Doble< T >\par
}
\par
{
Definici\'F3n en la l\'EDnea {\b 4} del archivo {\b Nodo_Doble.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v Nodo_Doble\:Nodo_Doble< T >}
{\xe \v Nodo_Doble< T >\:Nodo_Doble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Nodo_Doble}< T >{\b ::Nodo_Doble} (void )}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 23} del archivo {\b Nodo_Doble.h}.}\par
}
{\xe \v Nodo_Doble\:Nodo_Doble< T >}
{\xe \v Nodo_Doble< T >\:Nodo_Doble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Nodo_Doble}< T >{\b ::Nodo_Doble} (T  {\i nuvDato})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 28} del archivo {\b Nodo_Doble.h}.}\par
}
{\xe \v ~Nodo_Doble\:Nodo_Doble< T >}
{\xe \v Nodo_Doble< T >\:~Nodo_Doble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Nodo_Doble}< T >::~{\b Nodo_Doble} (void )}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 34} del archivo {\b Nodo_Doble.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v get_anterior\:Nodo_Doble< T >}
{\xe \v Nodo_Doble< T >\:get_anterior}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Nodo_Doble}< T > * {\b Nodo_Doble}< T >::get_anterior}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 69} del archivo {\b Nodo_Doble.h}.}\par
}
{\xe \v get_dato\:Nodo_Doble< T >}
{\xe \v Nodo_Doble< T >\:get_dato}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T {\b Nodo_Doble}< T >::get_dato}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 57} del archivo {\b Nodo_Doble.h}.}\par
}
{\xe \v get_siguiente\:Nodo_Doble< T >}
{\xe \v Nodo_Doble< T >\:get_siguiente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Nodo_Doble}< T > * {\b Nodo_Doble}< T >::get_siguiente}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 63} del archivo {\b Nodo_Doble.h}.}\par
}
{\xe \v set_anterior\:Nodo_Doble< T >}
{\xe \v Nodo_Doble< T >\:set_anterior}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b Nodo_Doble}< T >::set_anterior ({\b Nodo_Doble}< T > *  {\i ant})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 51} del archivo {\b Nodo_Doble.h}.}\par
}
{\xe \v set_dato\:Nodo_Doble< T >}
{\xe \v Nodo_Doble< T >\:set_dato}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b Nodo_Doble}< T >::set_dato (T  {\i nuvDato})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 39} del archivo {\b Nodo_Doble.h}.}\par
}
{\xe \v set_siguiente\:Nodo_Doble< T >}
{\xe \v Nodo_Doble< T >\:set_siguiente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b Nodo_Doble}< T >::set_siguiente ({\b Nodo_Doble}< T > *  {\i sig})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 45} del archivo {\b Nodo_Doble.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir del siguiente fichero:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Nodo_Doble.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase Persona\par \pard\plain 
{\tc\tcl2 \v Persona}
{\xe \v Persona}
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\par
{
{\f2 #include <Persona.h>}}\par
Diagrama de herencias de Persona{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_persona.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Persona} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Persona} (std::string, std::string, std::string)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Persona} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_nombre} (std::string)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_apellido} (std::string)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_cedula} (std::string)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b get_nombre} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b get_apellido} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b get_cedula} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirDatos} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b toString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definici\'F3n en la l\'EDnea {\b 5} del archivo {\b Persona.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v Persona\:Persona}
{\xe \v Persona\:Persona}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Persona::Persona (void )}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 8} del archivo {\b Persona.cpp}.}\par
}
{\xe \v Persona\:Persona}
{\xe \v Persona\:Persona}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Persona::Persona (std::string , std::string , std::string )}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Persona\:Persona}
{\xe \v Persona\:~Persona}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Persona::~Persona (void )}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 22} del archivo {\b Persona.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v get_apellido\:Persona}
{\xe \v Persona\:get_apellido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Persona::get_apellido ()}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 53} del archivo {\b Persona.cpp}.}\par
}
{\xe \v get_cedula\:Persona}
{\xe \v Persona\:get_cedula}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Persona::get_cedula ()}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 43} del archivo {\b Persona.cpp}.}\par
}
{\xe \v get_nombre\:Persona}
{\xe \v Persona\:get_nombre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Persona::get_nombre ()}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 48} del archivo {\b Persona.cpp}.}\par
}
{\xe \v imprimirDatos\:Persona}
{\xe \v Persona\:imprimirDatos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Persona::imprimirDatos ()}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 58} del archivo {\b Persona.cpp}.}\par
}
{\xe \v set_apellido\:Persona}
{\xe \v Persona\:set_apellido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Persona::set_apellido (std::string )}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 37} del archivo {\b Persona.cpp}.}\par
}
{\xe \v set_cedula\:Persona}
{\xe \v Persona\:set_cedula}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Persona::set_cedula (std::string )}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 27} del archivo {\b Persona.cpp}.}\par
}
{\xe \v set_nombre\:Persona}
{\xe \v Persona\:set_nombre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Persona::set_nombre (std::string )}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 32} del archivo {\b Persona.cpp}.}\par
}
{\xe \v toString\:Persona}
{\xe \v Persona\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Persona::toString ()}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 65} del archivo {\b Persona.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir de los siguientes ficheros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Persona.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Persona.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase RolDePago\par \pard\plain 
{\tc\tcl2 \v RolDePago}
{\xe \v RolDePago}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\par
{
{\f2 #include <RolDePago.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RolDePago} ({\b Empleado}, float, float, float, float, float, float, float, float, float, float)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RolDePago} ({\b Empleado}, float, float, float, float)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RolDePago} ()=default\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Empleado} {\b get_empleado} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b get_sueldo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b get_horasExtra} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b get_feriados} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b get_subTotal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b get_fondosReserva} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b get_totalIngreso} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b get_retencionIess} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b get_prestamoIess} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b get_totalRetencion} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b get_netoRecibir} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_sueldo} (float)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_horasExtra} (float)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_feriados} (float)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_subTotal} (float)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_fondosReserva} (float)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_totalIngreso} (float)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_retencionIess} (float)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_prestamoIess} (float)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_totalRetencion} (float)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_netoRecibir} (float)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirDatos} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b toString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definici\'F3n en la l\'EDnea {\b 3} del archivo {\b RolDePago.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v RolDePago\:RolDePago}
{\xe \v RolDePago\:RolDePago}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RolDePago::RolDePago ({\b Empleado}  {\i empleado}, float  {\i sueldo}, float  {\i horasExtras}, float  {\i feriados}, float  {\i subTotal}, float  {\i fondosReserva}, float  {\i totalIngresos}, float  {\i retencionIess}, float  {\i iess}, float  {\i totalRetencion}, float  {\i netoRecibir})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 9} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v RolDePago\:RolDePago}
{\xe \v RolDePago\:RolDePago}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RolDePago::RolDePago ({\b Empleado}  {\i empleado}, float  {\i sueldo}, float  {\i horasExtras}, float  {\i feriados}, float  {\i Iess})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 24} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v RolDePago\:RolDePago}
{\xe \v RolDePago\:RolDePago}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RolDePago::RolDePago (){\f2 [default]}}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v get_empleado\:RolDePago}
{\xe \v RolDePago\:get_empleado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Empleado} RolDePago::get_empleado ()}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 39} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v get_feriados\:RolDePago}
{\xe \v RolDePago\:get_feriados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RolDePago::get_feriados ()}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 54} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v get_fondosReserva\:RolDePago}
{\xe \v RolDePago\:get_fondosReserva}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RolDePago::get_fondosReserva ()}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 64} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v get_horasExtra\:RolDePago}
{\xe \v RolDePago\:get_horasExtra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RolDePago::get_horasExtra ()}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 49} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v get_netoRecibir\:RolDePago}
{\xe \v RolDePago\:get_netoRecibir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RolDePago::get_netoRecibir ()}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 89} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v get_prestamoIess\:RolDePago}
{\xe \v RolDePago\:get_prestamoIess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RolDePago::get_prestamoIess ()}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 79} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v get_retencionIess\:RolDePago}
{\xe \v RolDePago\:get_retencionIess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RolDePago::get_retencionIess ()}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 74} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v get_subTotal\:RolDePago}
{\xe \v RolDePago\:get_subTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RolDePago::get_subTotal ()}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 59} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v get_sueldo\:RolDePago}
{\xe \v RolDePago\:get_sueldo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RolDePago::get_sueldo ()}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 44} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v get_totalIngreso\:RolDePago}
{\xe \v RolDePago\:get_totalIngreso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RolDePago::get_totalIngreso ()}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 69} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v get_totalRetencion\:RolDePago}
{\xe \v RolDePago\:get_totalRetencion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RolDePago::get_totalRetencion ()}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 84} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v imprimirDatos\:RolDePago}
{\xe \v RolDePago\:imprimirDatos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RolDePago::imprimirDatos ()}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 144} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v set_feriados\:RolDePago}
{\xe \v RolDePago\:set_feriados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RolDePago::set_feriados (float  {\i feriados})}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 104} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v set_fondosReserva\:RolDePago}
{\xe \v RolDePago\:set_fondosReserva}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RolDePago::set_fondosReserva (float  {\i fondosReserva})}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 114} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v set_horasExtra\:RolDePago}
{\xe \v RolDePago\:set_horasExtra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RolDePago::set_horasExtra (float  {\i horasExtras})}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 99} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v set_netoRecibir\:RolDePago}
{\xe \v RolDePago\:set_netoRecibir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RolDePago::set_netoRecibir (float  {\i netoRecibir})}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 139} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v set_prestamoIess\:RolDePago}
{\xe \v RolDePago\:set_prestamoIess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RolDePago::set_prestamoIess (float  {\i prestamoIess})}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 129} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v set_retencionIess\:RolDePago}
{\xe \v RolDePago\:set_retencionIess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RolDePago::set_retencionIess (float  {\i retencionIess})}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 124} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v set_subTotal\:RolDePago}
{\xe \v RolDePago\:set_subTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RolDePago::set_subTotal (float  {\i subTotal})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 109} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v set_sueldo\:RolDePago}
{\xe \v RolDePago\:set_sueldo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RolDePago::set_sueldo (float  {\i sueldo})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 94} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v set_totalIngreso\:RolDePago}
{\xe \v RolDePago\:set_totalIngreso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RolDePago::set_totalIngreso (float  {\i totalIngresos})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 119} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v set_totalRetencion\:RolDePago}
{\xe \v RolDePago\:set_totalRetencion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RolDePago::set_totalRetencion (float  {\i totalRetencion})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 134} del archivo {\b RolDePago.cpp}.}\par
}
{\xe \v toString\:RolDePago}
{\xe \v RolDePago\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string RolDePago::toString ()}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 164} del archivo {\b RolDePago.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir de los siguientes ficheros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b RolDePago.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b RolDePago.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase Validacion\par \pard\plain 
{\tc\tcl2 \v Validacion}
{\xe \v Validacion}
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\par
{
{\f2 #include <Validacion.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b limpiar_consola} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b leer_cadena} (const std::string etiqueta, bool permitir_vacio=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b leer_cadena_regex} (const std::string etiqueta, std::string regex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b leer_entero} (std::string etiqueta, int minimo=INT_MIN, int maximo=INT_MAX)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b cadenas_iguales} (std::string a, std::string b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b leer_flotante} (std::string etiqueta, float minimo=DBL_MIN, float maximo=DBL_MAX)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b cedula_valida} (const std::string cedula)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b ListaCircularDoble}< std::string > {\b dividir_cadena} (std::string cadena, std::string delimitador)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b trim_cadena} (std::string cadena)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b leer_lineas} (std::string nombre_archivo, std::function< void(std::string linea, {\b ListaCircularDoble}< std::string > datos)> callback)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b cadena_minusculas} (std::string cadena)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b existe_archivo} (std::string nombre_archivo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b generar_aleatorio} (int minimo=INT_MIN, int maximo=INT_MAX)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b decimal_fixed} (float valor, int precision=2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b ingresar_DatosEnteros} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b ingresar_DatosReales} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definici\'F3n en la l\'EDnea {\b 19} del archivo {\b Validacion.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v cadena_minusculas\:Validacion}
{\xe \v Validacion\:cadena_minusculas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Validacion::cadena_minusculas (std::string  {\i cadena}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 201} del archivo {\b Validacion.h}.}\par
}
{\xe \v cadenas_iguales\:Validacion}
{\xe \v Validacion\:cadenas_iguales}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Validacion::cadenas_iguales (std::string  {\i a}, std::string  {\i b}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 85} del archivo {\b Validacion.h}.}\par
}
{\xe \v cedula_valida\:Validacion}
{\xe \v Validacion\:cedula_valida}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Validacion::cedula_valida (const std::string  {\i cedula}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 109} del archivo {\b Validacion.h}.}\par
}
{\xe \v decimal_fixed\:Validacion}
{\xe \v Validacion\:decimal_fixed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Validacion::decimal_fixed (float  {\i valor}, int  {\i precision} = {\f2 2}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 224} del archivo {\b Validacion.h}.}\par
}
{\xe \v dividir_cadena\:Validacion}
{\xe \v Validacion\:dividir_cadena}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b ListaCircularDoble}< std::string > Validacion::dividir_cadena (std::string  {\i cadena}, std::string  {\i delimitador}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 149} del archivo {\b Validacion.h}.}\par
}
{\xe \v existe_archivo\:Validacion}
{\xe \v Validacion\:existe_archivo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Validacion::existe_archivo (std::string  {\i nombre_archivo}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 211} del archivo {\b Validacion.h}.}\par
}
{\xe \v generar_aleatorio\:Validacion}
{\xe \v Validacion\:generar_aleatorio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Validacion::generar_aleatorio (int  {\i minimo} = {\f2 INT_MIN}, int  {\i maximo} = {\f2 INT_MAX}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 215} del archivo {\b Validacion.h}.}\par
}
{\xe \v ingresar_DatosEnteros\:Validacion}
{\xe \v Validacion\:ingresar_DatosEnteros}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Validacion::ingresar_DatosEnteros (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 232} del archivo {\b Validacion.h}.}\par
}
{\xe \v ingresar_DatosReales\:Validacion}
{\xe \v Validacion\:ingresar_DatosReales}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static float Validacion::ingresar_DatosReales (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 250} del archivo {\b Validacion.h}.}\par
}
{\xe \v leer_cadena\:Validacion}
{\xe \v Validacion\:leer_cadena}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Validacion::leer_cadena (const std::string  {\i etiqueta}, bool  {\i permitir_vacio} = {\f2 false}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 37} del archivo {\b Validacion.h}.}\par
}
{\xe \v leer_cadena_regex\:Validacion}
{\xe \v Validacion\:leer_cadena_regex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Validacion::leer_cadena_regex (const std::string  {\i etiqueta}, std::string  {\i regex}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 52} del archivo {\b Validacion.h}.}\par
}
{\xe \v leer_entero\:Validacion}
{\xe \v Validacion\:leer_entero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Validacion::leer_entero (std::string  {\i etiqueta}, int  {\i minimo} = {\f2 INT_MIN}, int  {\i maximo} = {\f2 INT_MAX}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 68} del archivo {\b Validacion.h}.}\par
}
{\xe \v leer_flotante\:Validacion}
{\xe \v Validacion\:leer_flotante}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static float Validacion::leer_flotante (std::string  {\i etiqueta}, float  {\i minimo} = {\f2 DBL_MIN}, float  {\i maximo} = {\f2 DBL_MAX}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 92} del archivo {\b Validacion.h}.}\par
}
{\xe \v leer_lineas\:Validacion}
{\xe \v Validacion\:leer_lineas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Validacion::leer_lineas (std::string  {\i nombre_archivo}, std::function< void(std::string linea, {\b ListaCircularDoble}< std::string > datos)>  {\i callback}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 173} del archivo {\b Validacion.h}.}\par
}
{\xe \v limpiar_consola\:Validacion}
{\xe \v Validacion\:limpiar_consola}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Validacion::limpiar_consola (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 22} del archivo {\b Validacion.h}.}\par
}
{\xe \v trim_cadena\:Validacion}
{\xe \v Validacion\:trim_cadena}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Validacion::trim_cadena (std::string  {\i cadena}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 167} del archivo {\b Validacion.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir del siguiente fichero:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/{\b Validacion.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentaci\'F3n de archivos{\tc \v Documentaci\'F3n de archivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorRegistro.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorRegistro.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorRegistro.cpp}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ControladorRegistro.h"}\par
{\f2 #include "Validacion.h"}\par
{\f2 #include <string>}\par
{\f2 #include <sstream>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ControladorRegistro.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorRegistro.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorRegistro.cpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "ControladorRegistro.h"}\par
00002 {\cf21 #include "Validacion.h"}\par
00003 \par
00004 {\cf21 #include <string>}\par
00005 {\cf21 #include <sstream>}\par
00006 \par
00007 {\cf17 using namespace }std;\par
00008 \par
00009 {\cf20 // INGRESO GENERAL}\par
00010 {\cf18 void} ControladorRegistro::registrarEmpleado() \{\par
00011     std::string cedula;\par
00012     std::string nombres;\par
00013     std::string apellidos;\par
00014     std::string cargo;\par
00015 \par
00016     std::cout << {\cf22 "Registrar cliente:"} << std::endl << std::endl;\par
00017     cout << {\cf22 "Ingrese Apellidos: "};\par
00018     apellidos = Validacion::leer_cadena_regex({\cf22 ""}, {\cf22 "^[a-zA-Z]\{2,\}(\\\\s[a-zA-Z]\{2,\})?$"});\par
00019     cout << {\cf22 "Ingrese Nombres: "};\par
00020     nombres = Validacion::leer_cadena_regex({\cf22 ""}, {\cf22 "^[a-zA-Z]\{2,\}(\\\\s[a-zA-Z]\{2,\})?$"});\par
00021     cout << {\cf22 "Ingrese Cargo: "};\par
00022     cargo = Validacion::leer_cadena_regex({\cf22 ""}, {\cf22 "^[a-zA-Z]\{2,\}(\\\\s[a-zA-Z]\{2,\})?$"});\par
00023 \par
00024     {\cf17 auto} clientes = leerClientes();\par
00025 \par
00026     {\cf19 do} \{\par
00027         cout << {\cf22 "Ingresar Cedula: "};\par
00028         cedula = Validacion::leer_cadena_regex({\cf22 ""}, {\cf22 "^[0-9]\{10\}$"});\par
00029 \par
00030         {\cf19 if} (!Validacion::cedula_valida(cedula)) \{           \par
00031             cout << {\cf22 "Cedula invalida"}<<endl;\par
00032             {\cf19 continue};\par
00033         \}\par
00034 \par
00035         {\cf17 auto} encontrado = clientes.buscar([cedula](Empleado c) \{\par
00036             {\cf19 return} c.get_cedula() == cedula;\par
00037             \});\par
00038 \par
00039         {\cf19 if} (encontrado) \{           \par
00040             cout << {\cf22 "Cedula ya registrada"}<<endl;\par
00041             {\cf19 continue};\par
00042         \}\par
00043 \par
00044         {\cf19 break};\par
00045     \} {\cf19 while} ({\cf17 true});\par
00046     \par
00047     Empleado cliente(cedula,nombres,apellidos,cargo);\par
00048     guardarEmpleado(cliente);   \par
00049     cout << {\cf22 "Datos guardados"};\par
00050 \}\par
00051 \par
00052 \par
00053 {\cf18 void} ControladorRegistro::registrarRolPago() \{\par
00054     std::string cedula;\par
00055     {\cf17 auto} clientes = leerClientes(); {\cf20 // Lista tipo Empleado}\par
00056     Nodo_Doble<Empleado>* encontrado;\par
00057 \par
00058     {\cf19 if} (clientes.estaVacio()) \{     \par
00059         cout << {\cf22 "No existen empleados registrados"};\par
00060         {\cf19 return};\par
00061     \}\par
00062 \par
00063     {\cf19 do} \{\par
00064         cout << {\cf22 "Ingresar Cedula: "};\par
00065         cedula = Validacion::leer_cadena_regex({\cf22 ""}, {\cf22 "^[0-9]\{10\}$"});\par
00066 \par
00067         {\cf19 if} (!Validacion::cedula_valida(cedula)) \{           \par
00068             cout << {\cf22 "Cedula invalida"}<<endl;\par
00069             {\cf19 continue};\par
00070         \}\par
00071 \par
00072         encontrado = clientes.buscar([cedula](Empleado c) \{\par
00073             {\cf19 return} c.get_cedula() == cedula;\par
00074             \});\par
00075 \par
00076         {\cf19 if} (!encontrado) \{          \par
00077             cout << {\cf22 "Cedula no registrada"};\par
00078             {\cf19 continue};\par
00079         \}\par
00080 \par
00081         {\cf19 break};\par
00082     \} {\cf19 while} ({\cf17 true});\par
00083 \par
00084     \par
00085     {\cf18 float} salarioR = Validacion::leer_flotante({\cf22 "Ingrese el salario unificado: "}, 0.f);      \par
00086     {\cf18 float} horasR = Validacion::leer_flotante({\cf22 "Ingrese el salario horas extras: "}, 0.f); \par
00087     {\cf18 float} feriadoR = Validacion::leer_flotante({\cf22 "Ingrese el salario por feriados: "}, 0.f);   \par
00088     {\cf18 float} prestamoR = Validacion::leer_flotante({\cf22 "Ingrese el prestamo realizado al IESS: "}, 0.f);\par
00089 \par
00090     Empleado trabajador = encontrado->get_dato();\par
00091     RolDePago asistencia(trabajador, salarioR, horasR, feriadoR, prestamoR);\par
00092     guardarRolDePago(asistencia);   \par
00093     cout << {\cf22 "Datos guardados"};\par
00094 \}\par
00095 \par
00096 {\cf20 // LISTA CIRCULARES}\par
00097 ListaCircularDoble<Empleado> ControladorRegistro::leerClientes() \{\par
00098     \par
00099     ListaCircularDoble<Empleado> clientes;\par
00100 \par
00101     Validacion::leer_lineas({\cf22 "EmpleadosLC.txt"}, [&](std::string linea, ListaCircularDoble<std::string> columnas) \{\par
00102     std::string cedula = columnas.getPosicion(0)->get_dato();\par
00103     std::string nombres = columnas.getPosicion(1)->get_dato();\par
00104     std::string apellidos = columnas.getPosicion(2)->get_dato();\par
00105     std::string cargo = columnas.getPosicion(3)->get_dato();\par
00106 \par
00107     Empleado cliente(cedula, nombres, apellidos, cargo);\par
00108     clientes.insertarFinal(cliente);\par
00109         \});\par
00110 \par
00111     {\cf19 return} clientes;\par
00112 \}\par
00113 \par
00114 \par
00115 {\cf18 void} ControladorRegistro::guardarEmpleado(Empleado cliente) \{\par
00116     {\cf17 auto} clientes = leerClientes();\par
00117     std::ofstream archivo({\cf22 "EmpleadosLC.txt"}, std::ios::trunc);\par
00118 \par
00119     clientes.recorrer([&](Empleado c) \{\par
00120         archivo << c.toString() << std::endl;\par
00121         \});\par
00122 \par
00123     archivo << cliente.toString() << std::endl;\par
00124     archivo.close();\par
00125 \}\par
00126 \par
00127 \par
00128 ListaCircularDoble<RolDePago> ControladorRegistro::leerRolDePago() \{\par
00129     ListaCircularDoble<RolDePago> asistencias;\par
00130     {\cf17 auto} clientes = leerClientes();\par
00131 \par
00132     Validacion::leer_lineas({\cf22 "RoldePagoLC.txt"}, [&](std::string linea, ListaCircularDoble<std::string> columnas) \{\par
00133     std::string cedula = columnas.getPosicion(0)->get_dato();\par
00134     std::string salarioU = columnas.getPosicion(1)->get_dato();\par
00135     std::string salarioH = columnas.getPosicion(2)->get_dato();\par
00136     std::string feriadosU = columnas.getPosicion(3)->get_dato();\par
00137     std::string prestamoI = columnas.getPosicion(8)->get_dato();\par
00138     std::string total = columnas.getPosicion(5)->get_dato();\par
00139     {\cf18 float} salarioU1 = std::stof(salarioU);\par
00140     {\cf18 float} salarioH1 = std::stof(salarioH);\par
00141     {\cf18 float} feriadosU1 = std::stof(feriadosU);\par
00142     {\cf18 float} prestamoI1 = std::stof(prestamoI);\par
00143 \par
00144     {\cf17 auto} encontrado = clientes.buscar([&](Empleado cliente) \{\par
00145         {\cf19 return} cliente.get_cedula() == cedula;\par
00146         \});\par
00147 \par
00148     {\cf19 if} (!encontrado) \{\par
00149         {\cf19 return};\par
00150     \}\par
00151 \par
00152     Empleado cliente = encontrado->get_dato();\par
00153     RolDePago asistencia(cliente, salarioU1, salarioH1, feriadosU1,prestamoI1);\par
00154     asistencias.insertarFinal(asistencia);\par
00155         \});\par
00156 \par
00157     {\cf19 return} asistencias;\par
00158 \}\par
00159 \par
00160 \par
00161 {\cf18 void} ControladorRegistro::guardarRolDePago(RolDePago asistencia) \{\par
00162     {\cf17 auto} asistencias = leerRolDePago();\par
00163     std::ofstream archivo({\cf22 "RoldePagoLC.txt"}, std::ios::trunc);\par
00164 \par
00165     asistencias.recorrer([&](RolDePago a) \{\par
00166         archivo << a.toString() << std::endl;\par
00167         \});\par
00168 \par
00169     archivo << asistencia.toString() << std::endl;\par
00170     archivo.close();\par
00171 \}\par
00172 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorRegistro.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorRegistro.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorRegistro.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ListaCircularDoble.h"}\par
{\f2 #include "Empleado.h"}\par
{\f2 #include "RolDePago.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ControladorRegistro}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ControladorRegistro.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorRegistro.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorRegistro.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include "ListaCircularDoble.h"}\par
00003 {\cf21 #include "Empleado.h"}\par
00004 {\cf21 #include "RolDePago.h"}\par
00005 {\cf17 class }ControladorRegistro\par
00006 \{\par
00007 {\cf17 public}:\par
00008     {\cf18 void} registrarEmpleado();\par
00009     {\cf18 void} registrarRolPago();\par
00010 \par
00011     ListaCircularDoble<Empleado> leerClientes();\par
00012     {\cf18 void} guardarEmpleado(Empleado empleadoLC);\par
00013     {\cf20 //void mostrarClientes();}\par
00014 \par
00015     ListaCircularDoble<RolDePago> leerRolDePago();\par
00016     {\cf18 void} guardarRolDePago(RolDePago roldepagoLC);\par
00017     {\cf20 //void mostrarRolDePago();}\par
00018     \par
00019 \};\par
00020 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorReportes.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorReportes.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorReportes.cpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ControladorReportes.h"}\par
{\f2 #include "ControladorRegistro.h"}\par
{\f2 #include "Validacion.h"}\par
{\f2 #include <string>}\par
{\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <sstream>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ControladorReportes.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorReportes.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorReportes.cpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00002 {\cf21 #include "ControladorReportes.h"}\par
00003 {\cf21 #include "ControladorRegistro.h"}\par
00004 {\cf21 #include "Validacion.h"}\par
00005 \par
00006 {\cf21 #include <string>}\par
00007 {\cf21 #include <iostream>}\par
00008 {\cf21 #include <fstream>}\par
00009 {\cf21 #include <sstream>}\par
00010 \par
00011 {\cf18 void} ControladorReportes::mostrarPersonal() \{\par
00012     {\cf17 auto} clientes = controladorRegistro.leerClientes();\par
00013 \par
00014     clientes.recorrer([](Empleado cliente) \{\par
00015     std::cout << {\cf22 "CEDULA    : "} << cliente.get_cedula() << std::endl;\par
00016     std::cout << {\cf22 "NOMBRES   : "} << cliente.get_nombre() << std::endl;\par
00017     std::cout << {\cf22 "APELLIDOS : "} << cliente.get_apellido() << std::endl;\par
00018     std::cout << {\cf22 "CARGO     : "} << cliente.get_cargo() << std::endl;\par
00019     std::cout << {\cf22 "---------------------------------------------------------------"} << std::endl;\par
00020         \});\par
00021 \}\par
00022 \par
00023 \par
00024 {\cf18 void} ControladorReportes::mostrarRolDePago() \{\par
00025     {\cf17 auto} clientes = controladorRegistro.leerRolDePago();\par
00026     clientes.recorrer([](RolDePago cliente) \{\par
00027         std::cout << {\cf22 "CEDULA    : "} << cliente.get_empleado().get_cedula() << std::endl;\par
00028     std::cout << {\cf22 "NOMBRES   : "} << cliente.get_empleado().get_nombre() << std::endl;\par
00029     std::cout << {\cf22 "APELLIDOS : "} << cliente.get_empleado().get_apellido() << std::endl;\par
00030     std::cout << {\cf22 "CARGO     : "} << cliente.get_empleado().get_cargo() << std::endl;\par
00031     std::cout << {\cf22 "INFORMACION ROL PAGO:"} << std::endl;\par
00032     std::cout << {\cf22 "    SALARIO UNIFICADO     :  "} << cliente.get_sueldo() << std::endl;\par
00033     std::cout << {\cf22 "    SALARIO HORAS EXTRAS  :  "} << cliente.get_horasExtra() << std::endl;\par
00034     std::cout << {\cf22 "    SALARIO FERIADOS      :  "} << cliente.get_feriados() << std::endl;\par
00035     std::cout << {\cf22 "    SUB TOTAL             :  "} << cliente.get_subTotal() << std::endl;\par
00036     std::cout << {\cf22 "    FONDOS DE RESERVA     :  "} << cliente.get_fondosReserva() << std::endl;\par
00037     std::cout << {\cf22 "    TOTAL DE INGRESOS     :  "} << cliente.get_totalIngreso() << std::endl;\par
00038     std::cout << {\cf22 "    RETENCION IESS        :  "} << cliente.get_retencionIess() << std::endl;\par
00039     std::cout << {\cf22 "    PRESTAMO IESS         :  "} << cliente.get_prestamoIess() << std::endl;\par
00040     std::cout << {\cf22 "    TOTAL DE RETENCION    :  "} << cliente.get_totalRetencion() << std::endl;\par
00041     std::cout << {\cf22 "    SUELDO NETO A RECIBIR :  "} << cliente.get_netoRecibir() << std::endl;\par
00042     std::cout << {\cf22 "---------------------------------------------------------------"} << std::endl;\par
00043         \});\par
00044 \}\par
00045 \par
00046 \par
00047 {\cf18 void} ControladorReportes::buscarRolDePago() \{\par
00048     {\cf17 auto} clientes = controladorRegistro.leerRolDePago();\par
00049     std::string cedula;\par
00050     Nodo_Doble<RolDePago>* encontrado;\par
00051 \par
00052     {\cf19 if} (clientes.estaVacio()) \{     \par
00053         cout << {\cf22 "No se encontraron empleados registrados"} << endl;\par
00054         {\cf19 return};\par
00055     \}\par
00056 \par
00057     {\cf19 do} \{\par
00058         cout << {\cf22 "Ingresar Cedula: "};\par
00059         cedula = Validacion::leer_cadena_regex({\cf22 ""}, {\cf22 "^[0-9]\{10\}$"});\par
00060         \par
00061         {\cf19 if} (!Validacion::cedula_valida(cedula)) \{           \par
00062             cout << {\cf22 "Cedula invalida"} << endl;\par
00063             {\cf19 continue};\par
00064         \}\par
00065 \par
00066         encontrado = clientes.buscar([cedula](RolDePago c) \{\par
00067             {\cf19 return} c.get_empleado().get_cedula() == cedula;\par
00068             \});\par
00069 \par
00070         {\cf19 if} (!encontrado) \{          \par
00071             cout << {\cf22 "Cedula no registrada"} << endl;\par
00072             {\cf19 continue};\par
00073         \}\par
00074 \par
00075         {\cf19 break};\par
00076     \} {\cf19 while} ({\cf17 true});\par
00077 \par
00078     RolDePago cliente = encontrado->get_dato();\par
00079 \par
00080     std::cout << {\cf22 "CEDULA    : "} << cliente.get_empleado().get_cedula() << std::endl;\par
00081     std::cout << {\cf22 "NOMBRES   : "} << cliente.get_empleado().get_nombre() << std::endl;\par
00082     std::cout << {\cf22 "APELLIDOS : "} << cliente.get_empleado().get_apellido() << std::endl;\par
00083     std::cout << {\cf22 "CARGO     : "} << cliente.get_empleado().get_cargo() << std::endl;\par
00084     std::cout << {\cf22 "INFORMACION ROL PAGO:"} << std::endl;\par
00085     std::cout << {\cf22 "    SALARIO UNIFICADO     :  "} << cliente.get_sueldo() << std::endl;\par
00086     std::cout << {\cf22 "    SALARIO HORAS EXTRAS  :  "} << cliente.get_horasExtra() << std::endl;\par
00087     std::cout << {\cf22 "    SALARIO FERIADOS      :  "} << cliente.get_feriados() << std::endl;\par
00088     std::cout << {\cf22 "    SUB TOTAL             :  "} << cliente.get_subTotal() << std::endl;\par
00089     std::cout << {\cf22 "    FONDOS DE RESERVA     :  "} << cliente.get_fondosReserva() << std::endl;\par
00090     std::cout << {\cf22 "    TOTAL DE INGRESOS     :  "} << cliente.get_totalIngreso() << std::endl;\par
00091     std::cout << {\cf22 "    RETENCION IESS        :  "} << cliente.get_retencionIess() << std::endl;\par
00092     std::cout << {\cf22 "    PRESTAMO IESS         :  "} << cliente.get_prestamoIess() << std::endl;\par
00093     std::cout << {\cf22 "    TOTAL DE RETENCION    :  "} << cliente.get_totalRetencion() << std::endl;\par
00094     std::cout << {\cf22 "    SUELDO NETO A RECIBIR :  "} << cliente.get_netoRecibir() << std::endl;\par
00095     std::cout << {\cf22 "---------------------------------------------------------------"} << std::endl;\par
00096 \}\par
00097 \par
00098 {\cf18 void} ControladorReportes::buscarPersonal() \{\par
00099     {\cf17 auto} clientes = controladorRegistro.leerRolDePago();\par
00100     std::string cedula;\par
00101     Nodo_Doble<RolDePago>* encontrado;\par
00102 \par
00103     {\cf19 if} (clientes.estaVacio()) \{     \par
00104         cout << {\cf22 "No se encontraron Empleados"} << endl;\par
00105         {\cf19 return};\par
00106     \}\par
00107 \par
00108     {\cf19 do} \{\par
00109         cout << {\cf22 "Ingresar Cedula: "};\par
00110         cedula = Validacion::leer_cadena_regex({\cf22 ""}, {\cf22 "^[0-9]\{10\}$"});\par
00111 \par
00112         {\cf19 if} (!Validacion::cedula_valida(cedula)) \{           \par
00113             cout << {\cf22 "Cedula invalida"} << endl;\par
00114             {\cf19 continue};\par
00115         \}\par
00116 \par
00117         encontrado = clientes.buscar([cedula](RolDePago c) \{\par
00118             {\cf19 return} c.get_empleado().get_cedula() == cedula;\par
00119             \});\par
00120 \par
00121         {\cf19 if} (!encontrado) \{          \par
00122             cout << {\cf22 "Cedula no registrada"} << endl;\par
00123             {\cf19 continue};\par
00124         \}\par
00125 \par
00126         {\cf19 break};\par
00127     \} {\cf19 while} ({\cf17 true});\par
00128 \par
00129     RolDePago cliente = encontrado->get_dato();\par
00130 \par
00131     std::cout << {\cf22 "CEDULA    : "} << cliente.get_empleado().get_cedula() << std::endl;\par
00132     std::cout << {\cf22 "NOMBRES   : "} << cliente.get_empleado().get_nombre() << std::endl;\par
00133     std::cout << {\cf22 "APELLIDOS : "} << cliente.get_empleado().get_apellido() << std::endl;\par
00134     std::cout << {\cf22 "CARGO     : "} << cliente.get_empleado().get_cargo() << std::endl;\par
00135 \par
00136 \}\par
00137 \par
00138 \par
00139 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorReportes.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorReportes.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorReportes.h}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ControladorRegistro.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ControladorReportes}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ControladorReportes.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorReportes.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ControladorReportes.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include "ControladorRegistro.h"}\par
00003 {\cf17 class }ControladorReportes   \par
00004 \{\par
00005 {\cf17 private}:\par
00006     ControladorRegistro controladorRegistro;\par
00007 \par
00008 {\cf17 public}:\par
00009     {\cf18 void} mostrarPersonal();\par
00010     {\cf18 void} mostrarRolDePago();\par
00011     {\cf18 void} buscarRolDePago();\par
00012     {\cf18 void} buscarPersonal();\par
00013 \};\par
00014 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Definiciones.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Definiciones.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Definiciones.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b for_indexed}(...)\~ {\b for_indexed_v}(i, __VA_ARGS__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b for_indexed_v}(v, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOMINIO_EMAIL}\~ "espe.edu.ec"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _getch}(...)\~ getch(__VA_ARGS__)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeraciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum class {\b Tecla} : unsigned \{ {\b Arriba} = 72
, {\b Abajo} = 80
, {\b Izquierda} = 77
, {\b Derecha} = 75
, {\b Escape} = 27
, {\b Enter} = 13
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum class {\b TipoMensaje} \{ {\b Error}
, {\b Correcto}
, {\b Informativo}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr unsigned {\b operator+} ({\b Tecla} const {\b val})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de los 'defines'\par
\pard\plain 
{\xe \v _getch\:Definiciones.h}
{\xe \v Definiciones.h\:_getch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _getch(  {\i ...})\~ getch(__VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 31} del archivo {\b Definiciones.h}.}\par
}
{\xe \v DOMINIO_EMAIL\:Definiciones.h}
{\xe \v Definiciones.h\:DOMINIO_EMAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOMINIO_EMAIL\~ "espe.edu.ec"}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 28} del archivo {\b Definiciones.h}.}\par
}
{\xe \v for_indexed\:Definiciones.h}
{\xe \v Definiciones.h\:for_indexed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define for_indexed(  {\i ...})\~ {\b for_indexed_v}(i, __VA_ARGS__)}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 22} del archivo {\b Definiciones.h}.}\par
}
{\xe \v for_indexed_v\:Definiciones.h}
{\xe \v Definiciones.h\:for_indexed_v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define for_indexed_v( v,   {\i ...})}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 if} (std::size_t v = -1)   \\\par
        for (__VA_ARGS__)     \\\par
            if ((++v, {\cf17 true}))\par
}
{
Definici\'F3n en la l\'EDnea {\b 23} del archivo {\b Definiciones.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las enumeraciones\par
\pard\plain 
{\xe \v Tecla\:Definiciones.h}
{\xe \v Definiciones.h\:Tecla}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum class {\b Tecla} : unsigned{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valores de enumeraciones:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Arriba\:Definiciones.h}
{\xe \v Definiciones.h\:Arriba}
{\qr Arriba{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\cell }{\cell }{\row }
{\xe \v Abajo\:Definiciones.h}
{\xe \v Definiciones.h\:Abajo}
{\qr Abajo{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\cell }{\cell }{\row }
{\xe \v Izquierda\:Definiciones.h}
{\xe \v Definiciones.h\:Izquierda}
{\qr Izquierda{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\cell }{\cell }{\row }
{\xe \v Derecha\:Definiciones.h}
{\xe \v Definiciones.h\:Derecha}
{\qr Derecha{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\cell }{\cell }{\row }
{\xe \v Escape\:Definiciones.h}
{\xe \v Definiciones.h\:Escape}
{\qr Escape{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\cell }{\cell }{\row }
{\xe \v Enter\:Definiciones.h}
{\xe \v Definiciones.h\:Enter}
{\qr Enter{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\cell }{\cell }{\row }
}
\par
{
Definici\'F3n en la l\'EDnea {\b 3} del archivo {\b Definiciones.h}.}\par
}
{\xe \v TipoMensaje\:Definiciones.h}
{\xe \v Definiciones.h\:TipoMensaje}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum class {\b TipoMensaje}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valores de enumeraciones:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Error\:Definiciones.h}
{\xe \v Definiciones.h\:Error}
{\qr Error{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\cell }{\cell }{\row }
{\xe \v Correcto\:Definiciones.h}
{\xe \v Definiciones.h\:Correcto}
{\qr Correcto{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\cell }{\cell }{\row }
{\xe \v Informativo\:Definiciones.h}
{\xe \v Definiciones.h\:Informativo}
{\qr Informativo{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\cell }{\cell }{\row }
}
\par
{
Definici\'F3n en la l\'EDnea {\b 16} del archivo {\b Definiciones.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones\par
\pard\plain 
{\xe \v operator+\:Definiciones.h}
{\xe \v Definiciones.h\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
constexpr unsigned operator+ ({\b Tecla} const  {\i val}){\f2 [inline]}, {\f2 [constexpr]}}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 12} del archivo {\b Definiciones.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Definiciones.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Definiciones.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Definiciones.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf17 enum class} Tecla : {\cf18 unsigned} \{\par
00004     Arriba = 72,\par
00005     Abajo = 80,\par
00006     Izquierda = 77,\par
00007     Derecha = 75,\par
00008     Escape = 27,\par
00009     Enter = 13,\par
00010 \};\par
00011 \par
00012 {\cf17 inline} {\cf17 constexpr} {\cf18 unsigned} operator+(Tecla {\cf17 const} val) \{\par
00013     {\cf19 return} {\cf17 static_cast<}{\cf18 unsigned}{\cf17 >}(val);\par
00014 \}\par
00015 \par
00016 {\cf17 enum class} TipoMensaje \{\par
00017     Error,\par
00018     Correcto,\par
00019     Informativo\par
00020 \};\par
00021 \par
00022 {\cf21 #define for_indexed(...) for_indexed_v(i, __VA_ARGS__)}\par
00023 {\cf21 #define for_indexed_v(v, ...) \\}\par
00024 {\cf21     if (std::size_t v = -1)   \\}\par
00025 {\cf21         for (__VA_ARGS__)     \\}\par
00026 {\cf21             if ((++v, true))}\par
00027 \par
00028 {\cf21 #define DOMINIO_EMAIL "espe.edu.ec"}\par
00029 \par
00030 {\cf21 #ifndef _MSC_VER}\par
00031 {\cf21 #define _getch(...) getch(__VA_ARGS__)}\par
00032 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Empleado.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Empleado.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Empleado.cpp}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Empleado.h"}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Empleado.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Empleado.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Empleado.cpp}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "Empleado.h"}\par
00002 {\cf21 #include <iostream>}\par
00003 {\cf21 #include <string>}\par
00004 \par
00005 \par
00006 {\cf17 using namespace }std;\par
00007 \par
00008 {\cf20 // Costructores}\par
00009 Empleado::Empleado({\cf18 void})\par
00010 \{\par
00011     cargo = {\cf22 ""};\par
00012 \}\par
00013 \par
00014 Empleado::Empleado({\cf18 string} ced, {\cf18 string} nom, {\cf18 string} apell, {\cf18 string} carg) : Persona(ced, nom, apell)\par
00015 \{\par
00016     this->cargo = carg;\par
00017 \}\par
00018 \par
00019 Empleado::~Empleado({\cf18 void})\par
00020 \{\par
00021 \}\par
00022 \par
00023 {\cf20 // Setters}\par
00024 {\cf18 void} Empleado::set_cargo({\cf18 string} cargo)\par
00025 \{\par
00026     this->cargo = cargo;\par
00027 \}\par
00028 \par
00029 {\cf20 // Getters}\par
00030 {\cf18 string} Empleado::get_cargo()\par
00031 \{\par
00032     {\cf19 return} this->cargo;\par
00033 \}\par
00034 \par
00035 {\cf18 void} Empleado::imprimirDatos()\par
00036 \{\par
00037     cout << {\cf22 "Nombre: "} << this->get_nombre() << endl;\par
00038     cout << {\cf22 "Apellido: "} << this->get_apellido() << endl;\par
00039     cout << {\cf22 "Cedula: "} << this->get_cedula() << endl;\par
00040     cout << {\cf22 "Cargo: "} << this->cargo << endl;\par
00041 \}\par
00042 \par
00043 std::string Empleado::toString()\par
00044 \{\par
00045     {\cf19 return} this->get_cedula() + {\cf22 ","} + this->get_nombre() + {\cf22 ","} + this->get_apellido() + {\cf22 ","} + this->cargo;\par
00046         \par
00047 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Empleado.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Empleado.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Empleado.h}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include "Persona.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Empleado}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Empleado.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Empleado.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Empleado.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <iostream>}\par
00003 {\cf21 #include <string>}\par
00004 {\cf21 #include "Persona.h"}\par
00005 \par
00006 {\cf17 class }Empleado : {\cf17 public} Persona\par
00007 \{\par
00008 {\cf17 private}:\par
00009     std::string cargo;\par
00010     \par
00011 {\cf17 public}:\par
00012     Empleado({\cf18 void});\par
00013     Empleado(std::string, std::string, std::string, std::string);\par
00014     ~Empleado({\cf18 void});\par
00015     {\cf18 void} set_cargo(std::string);\par
00016     std::string get_cargo();\par
00017     {\cf18 void} imprimirDatos();\par
00018     std::string toString();\par
00019 \};\par
00020 \par
00021 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ListaCircularDoble.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ListaCircularDoble.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ListaCircularDoble.h}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Nodo_Doble.h"}\par
{\f2 #include <functional>}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListaCircularDoble< T >}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ListaCircularDoble.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ListaCircularDoble.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/ListaCircularDoble.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include "Nodo_Doble.h"}\par
00003 {\cf21 #include <functional>}\par
00004 {\cf21 #include <iostream>}\par
00005 \par
00006 {\cf17 template}<{\cf17 typename} T>\par
00007 {\cf17 class }ListaCircularDoble\par
00008 \{\par
00009 {\cf17 private}:\par
00010     Nodo_Doble<T>* cabeza = {\cf17 nullptr};\par
00011     {\cf18 int} size = 0;\par
00012 {\cf17 public}:\par
00013     ListaCircularDoble();\par
00014     {\cf20 //ListaCircularDoble(T dato);}\par
00015     {\cf20 //~ListaCircularDoble();}\par
00016     {\cf18 void} insertarFinal(T dato);\par
00017     {\cf18 void} insertarInicio(T dato);\par
00018     {\cf18 void} insertarPosicion({\cf18 int} pos, T dat);\par
00019     {\cf18 void} eliminarPosicion({\cf18 int} pos);\par
00020     {\cf18 void} eliminar(std::function<{\cf18 bool}(T dato)>); \par
00021     {\cf18 void} recorrer(std::function<{\cf18 void}(T dato)>); \par
00022     {\cf18 bool} estaVacio();\par
00023     {\cf18 int} total();\par
00024     \par
00025     Nodo_Doble<T>* getCabeza();\par
00026     Nodo_Doble<T>* getCola();\par
00027     Nodo_Doble<T>* getPosicion({\cf18 int} pos);\par
00028     Nodo_Doble<T>* buscar(std::function<{\cf18 bool}(T dato)>);\par
00029 \};\par
00030 \par
00031 {\cf17 template}<{\cf17 typename} T>\par
00032 ListaCircularDoble<T>::ListaCircularDoble()\par
00033 \{\par
00034 \}\par
00035 \par
00036 {\cf17 template}<{\cf17 typename} T>\par
00037 {\cf18 void} ListaCircularDoble<T>::insertarFinal(T dato)\par
00038 \{\par
00039     Nodo_Doble<T>* nodo = {\cf17 new} Nodo_Doble<T>(dato);\par
00040 \par
00041     {\cf19 if} (cabeza == {\cf17 nullptr}) \{\par
00042         cabeza = nodo;\par
00043         cabeza->set_anterior(cabeza);\par
00044         cabeza->set_siguiente(cabeza);\par
00045         size++;\par
00046     \}\par
00047     {\cf19 else} \{\par
00048         Nodo_Doble<T>* cola = getCola();\par
00049         cola->set_siguiente(nodo);\par
00050         nodo->set_anterior(cola);\par
00051         nodo->set_siguiente(cabeza);\par
00052         cabeza->set_anterior(nodo);\par
00053         size++;\par
00054     \}   \par
00055 \}\par
00056 \par
00057 {\cf17 template}<{\cf17 typename} T>\par
00058 {\cf18 void} ListaCircularDoble<T>::insertarInicio(T dato)\par
00059 \{\par
00060     Nodo_Doble<T>* nodo = {\cf17 new} Nodo_Doble<T>(dato);\par
00061 \par
00062     {\cf19 if} (estaVacio()) \{\par
00063         insertarFinal(dato);\par
00064         {\cf19 return};\par
00065     \}\par
00066     \par
00067     Nodo_Doble<T>* aux = cabeza;\par
00068 \par
00069     cabeza = nodo;\par
00070     cabeza->set_siguiente(aux);\par
00071     cabeza->set_anterior(aux->set_anterior());\par
00072     aux->set_anterior()->set_siguiente(cabeza);\par
00073     aux->set_anterior(cabeza);\par
00074     size++; \par
00075 \}\par
00076 \par
00077 {\cf17 template}<{\cf17 typename} T>\par
00078 {\cf18 void} ListaCircularDoble<T>::insertarPosicion({\cf18 int} pos, T dato) \par
00079 \{\par
00080     {\cf19 if} (pos < 0 || pos >= size) \par
00081     \{\par
00082         {\cf19 return};\par
00083     \}\par
00084 \par
00085     {\cf19 if} (size == 1) \par
00086     \{\par
00087         insertarInicio(dato);\par
00088     \}\par
00089     {\cf19 else} {\cf19 if} (pos == 0) \par
00090     \{\par
00091         insertarInicio(dato);\par
00092     \}\par
00093     {\cf19 else} {\cf19 if} (pos == size - 1) \par
00094     \{\par
00095         insertarFinal(dato);\par
00096     \}\par
00097     {\cf19 else} \par
00098     \{\par
00099         Nodo_Doble<T>* objetivo = getPosicion(pos);\par
00100         Nodo_Doble<T>* anterior = objetivo->set_anterior();\par
00101         Nodo_Doble<T>* siguiente = objetivo->set_siguiente();\par
00102         Nodo_Doble<T>* nodo = {\cf17 new} Nodo_Doble<T>(dato);\par
00103 \par
00104         anterior->set_siguiente(nodo);\par
00105         nodo->set_anterior(anterior);\par
00106         nodo->set_siguiente(objetivo);\par
00107         objetivo->set_anterior(nodo);\par
00108         size++;\par
00109     \}\par
00110 \}\par
00111 \par
00112 {\cf17 template}<{\cf17 typename} T>\par
00113 {\cf18 void} ListaCircularDoble<T>::eliminarPosicion({\cf18 int} index) \par
00114 \{\par
00115     {\cf19 if} (index < 0 || index >= size) \{\par
00116         {\cf19 return};\par
00117     \}\par
00118 \par
00119     {\cf19 if} (index == 0 || size == 1) \{\par
00120         {\cf19 if} (size > 1) \{\par
00121             Nodo_Doble<T>* aux = cabeza;\par
00122             cabeza = cabeza->get_siguiente();\par
00123             cabeza->set_anterior(aux->set_anterior());\par
00124             aux->set_anterior()->set_siguiente(cabeza);\par
00125             {\cf17 delete} aux;\par
00126         \}\par
00127         {\cf19 else} \{\par
00128             {\cf17 delete} cabeza;\par
00129             cabeza = {\cf17 nullptr};\par
00130         \}\par
00131     \}\par
00132     {\cf19 else} {\cf19 if} (index == size - 1) \{\par
00133         Nodo_Doble<T>* objetivo = cabeza->set_anterior();\par
00134         Nodo_Doble<T>* aux = objetivo->set_anterior();\par
00135         cabeza->set_anterior(aux);\par
00136         aux->set_siguiente(cabeza);\par
00137         {\cf17 delete} objetivo;\par
00138     \}\par
00139     {\cf19 else} \{\par
00140         Nodo_Doble<T>* objetivo = getPosicion(index);\par
00141         Nodo_Doble<T>* anterior = objetivo->set_anterior();\par
00142         Nodo_Doble<T>* siguiente = objetivo->get_siguiente();\par
00143 \par
00144         {\cf17 delete} objetivo;\par
00145         anterior->set_siguiente(siguiente);\par
00146         siguiente->set_anterior(anterior);\par
00147     \}\par
00148 \par
00149     size = size - 1;\par
00150 \}\par
00151 \par
00152 {\cf17 template}<{\cf17 typename} T>\par
00153 {\cf18 void} ListaCircularDoble<T>::eliminar(std::function<{\cf18 bool}(T dato)> filtro)\par
00154 \{\par
00155     Nodo_Doble<T>* nodo = cabeza;\par
00156     {\cf18 int} indice = 0;\par
00157 \par
00158     {\cf19 while} (nodo != {\cf17 nullptr}) \par
00159     \{\par
00160         {\cf18 bool} eliminar = filtro(nodo->set_dato());\par
00161 \par
00162         {\cf19 if} (eliminar) \{\par
00163             eliminarPosicion(indice);\par
00164             {\cf19 return};\par
00165         \}\par
00166 \par
00167         nodo = nodo->get_siguiente();\par
00168         indice++;\par
00169     \}\par
00170 \}\par
00171 \par
00172 {\cf17 template} <{\cf17 typename} T>\par
00173 {\cf17 inline} Nodo_Doble<T>* ListaCircularDoble<T>::getCabeza() \{\par
00174     {\cf19 return} cabeza;\par
00175 \}\par
00176 \par
00177 {\cf17 template}<{\cf17 typename} T>\par
00178 Nodo_Doble<T>* ListaCircularDoble<T>::getCola() \{\par
00179     Nodo_Doble<T>* cola = cabeza;\par
00180 \par
00181     {\cf19 if} (cola == {\cf17 nullptr}) \{\par
00182         {\cf19 return} {\cf17 nullptr};\par
00183     \}\par
00184 \par
00185     {\cf19 while} (cola->get_siguiente() != cabeza) \{\par
00186         cola = cola->get_siguiente();\par
00187     \}\par
00188 \par
00189     {\cf19 return} cola;\par
00190 \}\par
00191 \par
00192 {\cf17 template}<{\cf17 typename} T>\par
00193 Nodo_Doble<T>* ListaCircularDoble<T>::getPosicion({\cf18 int} indice) \par
00194 \{\par
00195     {\cf19 if} (indice < 0 || indice >= size) \{\par
00196         {\cf19 return} {\cf17 nullptr};\par
00197     \}\par
00198 \par
00199     {\cf18 int} i = 0;\par
00200     Nodo_Doble<T>* nodo = cabeza;\par
00201 \par
00202     {\cf19 if} (nodo == {\cf17 nullptr})\par
00203         {\cf19 return} {\cf17 nullptr};\par
00204 \par
00205     {\cf19 do} \{\par
00206         {\cf19 if} (i == indice) \{\par
00207             {\cf19 return} nodo;\par
00208         \}\par
00209 \par
00210         nodo = nodo->get_siguiente();\par
00211         i++;\par
00212     \} {\cf19 while} (nodo != cabeza);\par
00213 \par
00214     {\cf19 return} {\cf17 nullptr};\par
00215 \}\par
00216 \par
00217 {\cf17 template}<{\cf17 typename} T>\par
00218 Nodo_Doble<T>* ListaCircularDoble<T>::buscar(std::function<{\cf18 bool}(T dato)> filtro) \{\par
00219     Nodo_Doble<T>* nodo = cabeza;\par
00220 \par
00221     {\cf19 if} (nodo == {\cf17 nullptr}) \par
00222     \{\par
00223         {\cf19 return} {\cf17 nullptr};\par
00224     \}\par
00225 \par
00226     {\cf19 do} \{\par
00227         {\cf19 if} (filtro(nodo->get_dato())) \par
00228         \{\par
00229             {\cf19 return} nodo;\par
00230         \}\par
00231 \par
00232         nodo = nodo->get_siguiente();\par
00233     \} {\cf19 while} (nodo != cabeza);\par
00234 \par
00235     {\cf19 return} {\cf17 nullptr};\par
00236 \}\par
00237 \par
00238 {\cf17 template}<{\cf17 typename} T>\par
00239 {\cf18 void} ListaCircularDoble<T>::recorrer(std::function<{\cf18 void}(T dato)> llamada)\par
00240 \{\par
00241     Nodo_Doble<T>* nodo = cabeza;\par
00242 \par
00243     {\cf19 if} (nodo == {\cf17 nullptr}) \par
00244     \{\par
00245         {\cf19 return};\par
00246     \}\par
00247 \par
00248     {\cf19 do} \{\par
00249         llamada(nodo->get_dato());\par
00250         nodo = nodo->get_siguiente();\par
00251     \} {\cf19 while} (nodo != cabeza);\par
00252 \}\par
00253 \par
00254 {\cf17 template}<{\cf17 typename} T>\par
00255 {\cf18 bool} ListaCircularDoble<T>::estaVacio() \{\par
00256     {\cf19 return} size == 0;\par
00257 \}\par
00258 \par
00259 {\cf17 template}<{\cf17 typename} T>\par
00260 {\cf18 int} ListaCircularDoble<T>::total() \{\par
00261     {\cf19 return} size;\par
00262 \}\par
00263 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/main.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/main.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/main.cpp}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "Menu.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 6} del archivo {\b main.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/main.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/main.cpp}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include "Menu.h"}\par
00003 \par
00004 {\cf17 using namespace }std;\par
00005 \par
00006 {\cf18 int} main() \{\par
00007 \par
00008     Menu menu;\par
00009     menu.menuPrincipaListaCircular();\par
00010 \par
00011 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Menu.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Menu.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Menu.cpp}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Menu.h"}\par
{\f2 #include <iostream>}\par
{\f2 #include <istream>}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ControladorReportes} {\b controladorReporte}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ControladorRegistro} {\b controladorRegistro}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Validacion} {\b val}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las variables\par
\pard\plain 
{\xe \v controladorRegistro\:Menu.cpp}
{\xe \v Menu.cpp\:controladorRegistro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ControladorRegistro} controladorRegistro}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 9} del archivo {\b Menu.cpp}.}\par
}
{\xe \v controladorReporte\:Menu.cpp}
{\xe \v Menu.cpp\:controladorReporte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ControladorReportes} controladorReporte}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 8} del archivo {\b Menu.cpp}.}\par
}
{\xe \v val\:Menu.cpp}
{\xe \v Menu.cpp\:val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Validacion} val}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 10} del archivo {\b Menu.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Menu.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Menu.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Menu.cpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "Menu.h"}\par
00002 {\cf21 #include <iostream>}\par
00003 {\cf21 #include <istream>}\par
00004 {\cf21 #include <string>}\par
00005 \par
00006 {\cf17 using namespace }std;\par
00007 \par
00008 ControladorReportes controladorReporte;\par
00009 ControladorRegistro controladorRegistro;\par
00010 Validacion val;\par
00011 \par
00012 \par
00013 {\cf18 void} Menu::menuPrincipaListaCircular() \{\par
00014     {\cf18 int} opcion;\par
00015     {\cf18 bool} repetir = {\cf17 true};\par
00016 \par
00017     {\cf19 do}\par
00018     \{\par
00019         system({\cf22 "cls"});\par
00020         cout << {\cf22 "\\t\\t\\t--------------"} << endl;\par
00021         cout << {\cf22 "\\t\\t\\tROL DE PAGOS"} << endl;\par
00022         cout << {\cf22 "\\t\\t\\t--------------"} << endl;\par
00023         cout << {\cf22 "\\n\\t  1. INGRESO DE PERSONAL"} << endl;\par
00024         cout << {\cf22 "\\t  2. CONSULTAR ROL DE PAGOS"} << endl;\par
00025         cout << {\cf22 "\\t  0. REGRESAR"} << endl;\par
00026 \par
00027         cout << {\cf22 "\\n\\tIngrese una opcion: "};\par
00028         opcion=val.ingresar_DatosEnteros();\par
00029         cout << {\cf22 "\\n"} << endl;\par
00030         \par
00031 \par
00032         {\cf19 switch} (opcion) \{\par
00033         {\cf19 case} 1:\par
00034             menuAdministradorListaCircular();\par
00035             {\cf19 break};\par
00036 \par
00037         {\cf19 case} 2:         \par
00038             controladorReporte.buscarRolDePago();\par
00039             system({\cf22 "pause>nul"});\par
00040             {\cf19 break};\par
00041 \par
00042         {\cf19 case} 0:\par
00043             repetir = {\cf17 false};\par
00044             {\cf19 break};\par
00045         \}\par
00046     \} {\cf19 while} (repetir);\par
00047 \par
00048 \}\par
00049 {\cf18 void} Menu::menuAdministradorListaCircular() \{\par
00050     {\cf18 int} opcion;\par
00051     {\cf18 bool} repetir = {\cf17 true};\par
00052 \par
00053     {\cf19 do} \{\par
00054         system({\cf22 "cls"});\par
00055         cout << {\cf22 "\\t\\t\\t--------------"} << endl;\par
00056         cout << {\cf22 "\\t\\t\\tMENU DE PERSONAL"} << endl;\par
00057         cout << {\cf22 "\\t\\t\\t--------------"} << endl;\par
00058         cout << {\cf22 "\\n\\t  1. REGISTRO"} << endl;\par
00059         cout << {\cf22 "\\t  2. MOSTRAR EMPLEADOS"} << endl;\par
00060         cout << {\cf22 "\\t  0. REGRESAR"} << endl;\par
00061 \par
00062         cout << {\cf22 "\\n\\tIngrese una opcion: "};\par
00063         opcion=val.ingresar_DatosEnteros();\par
00064         cout << {\cf22 "\\n"} << endl;\par
00065 \par
00066 \par
00067         {\cf19 switch} (opcion) \{\par
00068         {\cf19 case} 1:\par
00069             menuOPAdminRegistroListaCircular();\par
00070             {\cf19 break};\par
00071 \par
00072         {\cf19 case} 2:\par
00073             menuOPAdminReportesListaCircular();\par
00074             {\cf19 break};\par
00075 \par
00076         {\cf19 case} 0:\par
00077             repetir = {\cf17 false};\par
00078             {\cf19 break};\par
00079         \}\par
00080     \} {\cf19 while} (repetir);\par
00081 \}\par
00082 {\cf18 void} Menu::menuOPAdminRegistroListaCircular() \{\par
00083     {\cf18 int} opcion;\par
00084     {\cf18 bool} repetir = {\cf17 true};\par
00085 \par
00086     {\cf19 do} \{\par
00087         system({\cf22 "cls"});\par
00088         cout << {\cf22 "\\t\\t\\t--------------"} << endl;\par
00089         cout << {\cf22 "\\t\\t\\tREGISTRO DE PERSONAL"} << endl;\par
00090         cout << {\cf22 "\\t\\t\\t--------------"} << endl;\par
00091         cout << {\cf22 "\\n\\t  1. REGISTRAR EMPLEADO"} << endl;\par
00092         cout << {\cf22 "\\t  2. REGISTRAR ROL DE PAGO"} << endl;\par
00093         cout << {\cf22 "\\t  0. REGRESAR"} << endl;\par
00094 \par
00095         cout << {\cf22 "\\n\\tIngrese una opcion: "};\par
00096         opcion=val.ingresar_DatosEnteros();\par
00097         cout << {\cf22 "\\n"} << endl;\par
00098 \par
00099         {\cf19 switch} (opcion) \{\par
00100         {\cf19 case} 1:\par
00101             controladorRegistro.registrarEmpleado();\par
00102             system({\cf22 "pause>nul"});\par
00103             {\cf19 break};\par
00104 \par
00105         {\cf19 case} 2:\par
00106             controladorRegistro.registrarRolPago();\par
00107             system({\cf22 "pause>nul"});\par
00108             {\cf19 break};\par
00109 \par
00110         {\cf19 case} 0:\par
00111             repetir = {\cf17 false};\par
00112             {\cf19 break};\par
00113         \}\par
00114     \} {\cf19 while} (repetir);\par
00115 \par
00116 \}\par
00117 {\cf18 void} Menu::menuOPAdminReportesListaCircular() \{\par
00118     {\cf18 int} opcion;\par
00119     {\cf18 bool} repetir = {\cf17 true};\par
00120 \par
00121     {\cf19 do} \{\par
00122         system({\cf22 "cls"});\par
00123         cout << {\cf22 "\\t\\t\\t--------------"} << endl;\par
00124         cout << {\cf22 "\\t\\t\\t MOSTRAR PERSONAL"} << endl;\par
00125         cout << {\cf22 "\\t\\t\\t--------------"} << endl;\par
00126         cout << {\cf22 "\\n\\t  1. VER EMPLEADOS"} << endl;\par
00127         cout << {\cf22 "\\t  2. BUSCAR EMPLEADO"} << endl;\par
00128         cout << {\cf22 "\\t  0. REGRESAR"} << endl;\par
00129 \par
00130         cout << {\cf22 "\\n\\tIngrese una opcion: "};\par
00131         opcion=val.ingresar_DatosEnteros();\par
00132         cout << {\cf22 "\\n"} << endl;\par
00133 \par
00134         {\cf19 switch} (opcion) \{\par
00135         {\cf19 case} 1:\par
00136             controladorReporte.mostrarPersonal();\par
00137             system({\cf22 "pause>nul"});\par
00138             {\cf19 break};\par
00139 \par
00140         {\cf19 case} 2:\par
00141             controladorReporte.buscarPersonal();\par
00142             system({\cf22 "pause>nul"});\par
00143             {\cf19 break};\par
00144 \par
00145         {\cf19 case} 0:\par
00146             repetir = {\cf17 false};\par
00147             {\cf19 break};\par
00148         \}\par
00149     \} {\cf19 while} (repetir);\par
00150 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Menu.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Menu.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Menu.h}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <istream>}\par
{\f2 #include <string>}\par
{\f2 #include "Empleado.h"}\par
{\f2 #include "RolDePago.h"}\par
{\f2 #include "ListaCircularDoble.h"}\par
{\f2 #include "ControladorReportes.h"}\par
{\f2 #include "ControladorRegistro.h"}\par
{\f2 #include "Validacion.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Menu}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Menu.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Menu.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Menu.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <iostream>}\par
00003 {\cf21 #include <istream>}\par
00004 {\cf21 #include <string>}\par
00005 \par
00006 {\cf21 #include "Empleado.h"}\par
00007 {\cf21 #include "RolDePago.h"}\par
00008 \par
00009 {\cf21 #include "ListaCircularDoble.h"}\par
00010 \par
00011 {\cf21 #include "ControladorReportes.h"}\par
00012 {\cf21 #include "ControladorRegistro.h"}\par
00013 {\cf21 #include "Validacion.h"}\par
00014 {\cf17 class }Menu\par
00015 \{\par
00016 {\cf17 public}:    \par
00017     {\cf18 void} menuPrincipaListaCircular();\par
00018     {\cf18 void} menuAdministradorListaCircular();\par
00019     {\cf18 void} menuOPAdminRegistroListaCircular();\par
00020     {\cf18 void} menuOPAdminReportesListaCircular();\par
00021 \};\par
00022 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Nodo_Doble.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Nodo_Doble.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Nodo_Doble.h}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Nodo_Doble< T >}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Nodo_Doble.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Nodo_Doble.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Nodo_Doble.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf17 template} <{\cf17 typename} T>\par
00004 {\cf17 class }Nodo_Doble \par
00005 \{\par
00006 {\cf17 private}:\par
00007     T dato;\par
00008     Nodo_Doble<T>* siguiente = {\cf17 nullptr};\par
00009     Nodo_Doble<T>* anterior = {\cf17 nullptr};\par
00010 {\cf17 public}:\par
00011     Nodo_Doble({\cf18 void});\par
00012     Nodo_Doble(T nuvDato);\par
00013     ~Nodo_Doble({\cf18 void});\par
00014     {\cf18 void} set_dato(T nuvDato);\par
00015     {\cf18 void} set_siguiente(Nodo_Doble<T>* sig);\par
00016     {\cf18 void} set_anterior(Nodo_Doble<T>* ant);\par
00017     T get_dato();\par
00018     Nodo_Doble<T>* get_siguiente();\par
00019     Nodo_Doble<T>* get_anterior();\par
00020 \};\par
00021 \par
00022 {\cf17 template} <{\cf17 typename} T>\par
00023 Nodo_Doble<T>::Nodo_Doble({\cf18 void})\par
00024 \{\par
00025 \}\par
00026 \par
00027 {\cf17 template} <{\cf17 typename} T>\par
00028 Nodo_Doble<T>::Nodo_Doble(T nuvDato)\par
00029 \{\par
00030     dato = nuvDato;\par
00031 \}\par
00032 \par
00033 {\cf17 template} <{\cf17 typename} T>\par
00034 Nodo_Doble<T>::~Nodo_Doble({\cf18 void})\par
00035 \{\par
00036 \}\par
00037 \par
00038 {\cf17 template} <{\cf17 typename} T>\par
00039 {\cf18 void} Nodo_Doble<T>::set_dato(T nuvDato)\par
00040 \{\par
00041     dato = nuvDato;\par
00042 \}\par
00043 \par
00044 {\cf17 template} <{\cf17 typename} T>\par
00045 {\cf18 void} Nodo_Doble<T>::set_siguiente(Nodo_Doble<T>* sig)\par
00046 \{\par
00047     siguiente = sig;\par
00048 \}\par
00049 \par
00050 {\cf17 template} <{\cf17 typename} T>\par
00051 {\cf18 void} Nodo_Doble<T>::set_anterior(Nodo_Doble<T>* ant)\par
00052 \{\par
00053     anterior = ant;\par
00054 \}\par
00055 \par
00056 {\cf17 template} <{\cf17 typename} T>\par
00057 T Nodo_Doble<T>::get_dato()\par
00058 \{\par
00059     {\cf19 return} dato;\par
00060 \}\par
00061 \par
00062 {\cf17 template} <{\cf17 typename} T>\par
00063 Nodo_Doble<T>* Nodo_Doble<T>::get_siguiente()\par
00064 \{\par
00065     {\cf19 return} siguiente;\par
00066 \}\par
00067 \par
00068 {\cf17 template} <{\cf17 typename} T>\par
00069 Nodo_Doble<T>* Nodo_Doble<T>::get_anterior()\par
00070 \{\par
00071     {\cf19 return} anterior;\par
00072 \}\par
00073 \par
00074 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Persona.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Persona.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Persona.cpp}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Persona.h"}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Persona.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Persona.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Persona.cpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "Persona.h"}\par
00002 {\cf21 #include <iostream>}\par
00003 {\cf21 #include <string>}\par
00004 \par
00005 {\cf17 using namespace }std;\par
00006 \par
00007 {\cf20 // Costructores}\par
00008 Persona::Persona({\cf18 void})\par
00009 \{\par
00010     nombre = {\cf22 ""};\par
00011     apellido = {\cf22 ""};\par
00012     cedula = {\cf22 ""};    \par
00013 \}\par
00014 \par
00015 Persona::Persona({\cf18 string} ced, {\cf18 string} nom, {\cf18 string} apell)\par
00016 \{\par
00017     this->cedula = ced;\par
00018     this->nombre = nom;\par
00019     this->apellido = apell;\par
00020 \}\par
00021 \par
00022 Persona::~Persona({\cf18 void})\par
00023 \{\par
00024 \}\par
00025 \par
00026 {\cf20 // Setters}\par
00027 {\cf18 void} Persona::set_cedula({\cf18 string} cedula)\par
00028 \{\par
00029     this->cedula = cedula;\par
00030 \}\par
00031 \par
00032 {\cf18 void} Persona::set_nombre({\cf18 string} nombre)\par
00033 \{\par
00034     this->nombre = nombre;\par
00035 \}\par
00036 \par
00037 {\cf18 void} Persona::set_apellido({\cf18 string} apellido)\par
00038 \{\par
00039     this->apellido = apellido;\par
00040 \}\par
00041 \par
00042 {\cf20 // Getters}\par
00043 {\cf18 string} Persona::get_cedula()\par
00044 \{\par
00045     {\cf19 return} this->cedula;\par
00046 \}\par
00047 \par
00048 {\cf18 string} Persona::get_nombre()\par
00049 \{\par
00050     {\cf19 return} this->nombre;\par
00051 \}\par
00052 \par
00053 {\cf18 string} Persona::get_apellido()\par
00054 \{\par
00055     {\cf19 return} this->apellido;\par
00056 \}\par
00057 \par
00058 {\cf18 void} Persona::imprimirDatos()\par
00059 \{\par
00060     cout << {\cf22 "Nombre: "} << this->nombre << endl;\par
00061     cout << {\cf22 "Apellido: "} << this->apellido << endl;\par
00062     cout << {\cf22 "Cedula: "} << this->cedula << endl;\par
00063 \}\par
00064 \par
00065 std::string Persona::toString()\par
00066 \{\par
00067     {\cf19 return} this->nombre + {\cf22 " "} + this->apellido + {\cf22 " "} + this->cedula;\par
00068 \}\par
00069 \par
00070 \par
00071 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Persona.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Persona.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Persona.h}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Persona}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Persona.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Persona.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Persona.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <iostream>}\par
00003 {\cf21 #include <string>}\par
00004 \par
00005 {\cf17 class }Persona\par
00006 \{\par
00007 {\cf17 private}:\par
00008     std::string nombre;\par
00009     std::string apellido;\par
00010     std::string cedula;\par
00011     \par
00012 {\cf17 public}:\par
00013     Persona({\cf18 void});\par
00014     Persona(std::string, std::string, std::string);\par
00015     ~Persona({\cf18 void});\par
00016     {\cf18 void} set_nombre(std::string);\par
00017     {\cf18 void} set_apellido(std::string);\par
00018     {\cf18 void} set_cedula(std::string);\par
00019     std::string get_nombre();\par
00020     std::string get_apellido();\par
00021     std::string get_cedula();\par
00022     {\cf18 void} imprimirDatos();\par
00023     std::string toString();\par
00024 \};\par
00025 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/RolDePago.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/RolDePago.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/RolDePago.cpp}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "RolDePago.h"}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b porcentajeIes}\~ 0.0945;\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de los 'defines'\par
\pard\plain 
{\xe \v porcentajeIes\:RolDePago.cpp}
{\xe \v RolDePago.cpp\:porcentajeIes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define porcentajeIes\~ 0.0945;}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 6} del archivo {\b RolDePago.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RolDePago.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/RolDePago.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/RolDePago.cpp}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "RolDePago.h"}\par
00002 {\cf21 #include <iostream>}\par
00003 {\cf21 #include <string>}\par
00004 \par
00005 {\cf17 using namespace }std;\par
00006 {\cf21 #define porcentajeIes 0.0945;}\par
00007 \par
00008 \par
00009 RolDePago::RolDePago(Empleado empleado, {\cf18 float} sueldo, {\cf18 float} horasExtras, {\cf18 float} feriados, {\cf18 float} subTotal, {\cf18 float} fondosReserva, {\cf18 float} totalIngresos, {\cf18 float} retencionIess,{\cf18 float} iess, {\cf18 float} totalRetencion, {\cf18 float} netoRecibir)\par
00010 \{\par
00011     this->empleado = empleado;\par
00012     this->sueldo = sueldo;\par
00013     this->horasExtras = horasExtras;\par
00014     this->feriados = feriados;\par
00015     this->subTotal = subTotal;\par
00016     this->fondosReserva = fondosReserva;\par
00017     this->totalIngresos = totalIngresos;\par
00018     this->retencionIess = retencionIess;\par
00019     this->desPrestamoIess = iess;\par
00020     this->totalRetencion = totalRetencion;\par
00021     this->netoRecibir = netoRecibir;\par
00022 \}\par
00023 \par
00024 RolDePago::RolDePago(Empleado empleado, {\cf18 float} sueldo, {\cf18 float} horasExtras, {\cf18 float} feriados,{\cf18 float} Iess)\par
00025 \{\par
00026     this->empleado = empleado;\par
00027     this->sueldo = sueldo;\par
00028     this->horasExtras = horasExtras;\par
00029     this->feriados = feriados;\par
00030     this->desPrestamoIess = Iess;   \par
00031     this->subTotal = sueldo + horasExtras + feriados;\par
00032     this->fondosReserva = subTotal / 12;\par
00033     this->totalIngresos = subTotal + fondosReserva;\par
00034     this->retencionIess = subTotal * porcentajeIes;\par
00035     this->totalRetencion = retencionIess + Iess ;\par
00036     this->netoRecibir = totalIngresos - totalRetencion;\par
00037 \}\par
00038 \par
00039 Empleado RolDePago::get_empleado()\par
00040 \{\par
00041     {\cf19 return} empleado;\par
00042 \}\par
00043 \par
00044 {\cf18 float} RolDePago::get_sueldo()\par
00045 \{\par
00046     {\cf19 return} sueldo;\par
00047 \}\par
00048 \par
00049 {\cf18 float} RolDePago::get_horasExtra()\par
00050 \{\par
00051     {\cf19 return} horasExtras;\par
00052 \}\par
00053 \par
00054 {\cf18 float} RolDePago::get_feriados()\par
00055 \{\par
00056     {\cf19 return} feriados;\par
00057 \}\par
00058 \par
00059 {\cf18 float} RolDePago::get_subTotal()\par
00060 \{\par
00061     {\cf19 return} subTotal;\par
00062 \}\par
00063 \par
00064 {\cf18 float} RolDePago::get_fondosReserva()\par
00065 \{\par
00066     {\cf19 return} fondosReserva;\par
00067 \}\par
00068 \par
00069 {\cf18 float} RolDePago::get_totalIngreso()\par
00070 \{\par
00071     {\cf19 return} totalIngresos;\par
00072 \}\par
00073 \par
00074 {\cf18 float} RolDePago::get_retencionIess()\par
00075 \{\par
00076     {\cf19 return} retencionIess;\par
00077 \}\par
00078 \par
00079 {\cf18 float} RolDePago::get_prestamoIess()\par
00080 \{\par
00081     {\cf19 return} desPrestamoIess;\par
00082 \}\par
00083 \par
00084 {\cf18 float} RolDePago::get_totalRetencion()\par
00085 \{\par
00086     {\cf19 return} totalRetencion;\par
00087 \}\par
00088 \par
00089 {\cf18 float} RolDePago::get_netoRecibir()\par
00090 \{\par
00091     {\cf19 return} netoRecibir;\par
00092 \}\par
00093 \par
00094 {\cf18 void} RolDePago::set_sueldo({\cf18 float} sueldo)\par
00095 \{\par
00096     this->sueldo = sueldo;\par
00097 \}\par
00098 \par
00099 {\cf18 void} RolDePago::set_horasExtra({\cf18 float} horasExtras)\par
00100 \{\par
00101     this->horasExtras = horasExtras;\par
00102 \}\par
00103 \par
00104 {\cf18 void} RolDePago::set_feriados({\cf18 float} feriados)\par
00105 \{\par
00106     this->feriados = feriados;\par
00107 \}\par
00108 \par
00109 {\cf18 void} RolDePago::set_subTotal({\cf18 float} subTotal)\par
00110 \{\par
00111     this->subTotal = subTotal;\par
00112 \}\par
00113 \par
00114 {\cf18 void} RolDePago::set_fondosReserva({\cf18 float} fondosReserva)\par
00115 \{\par
00116     this->fondosReserva = fondosReserva;\par
00117 \}\par
00118 \par
00119 {\cf18 void} RolDePago::set_totalIngreso({\cf18 float} totalIngresos)\par
00120 \{\par
00121     this->totalIngresos = totalIngresos;\par
00122 \}\par
00123 \par
00124 {\cf18 void} RolDePago::set_retencionIess({\cf18 float} retencionIess)\par
00125 \{\par
00126     this->retencionIess = retencionIess;\par
00127 \}\par
00128 \par
00129 {\cf18 void} RolDePago::set_prestamoIess({\cf18 float} prestamoIess)\par
00130 \{\par
00131     this->desPrestamoIess = prestamoIess;\par
00132 \}\par
00133 \par
00134 {\cf18 void} RolDePago::set_totalRetencion({\cf18 float} totalRetencion)\par
00135 \{\par
00136     this->totalRetencion = totalRetencion;\par
00137 \}\par
00138 \par
00139 {\cf18 void} RolDePago::set_netoRecibir({\cf18 float} netoRecibir)\par
00140 \{\par
00141     this->netoRecibir = netoRecibir;\par
00142 \}\par
00143 \par
00144 {\cf18 void} RolDePago::imprimirDatos() \{\par
00145     std::cout << {\cf22 "INFORMACION EMPLEADO"} << std::endl;\par
00146     std::cout << {\cf22 "NUM CEDULA: "} << empleado.get_cedula() << std::endl;\par
00147     std::cout << {\cf22 "NOMBRE: "} << empleado.get_nombre() << std::endl;\par
00148     std::cout << {\cf22 "APELLIDO: "} << empleado.get_apellido() << std::endl;\par
00149     std::cout << {\cf22 "CARGO: "} << empleado.get_cargo() << std::endl;\par
00150     std::cout << {\cf22 "   INFORMACION ROL DE PAGO"} << std::endl;\par
00151     std::cout << {\cf22 "       SUELDO "} << sueldo << std::endl;\par
00152     std::cout << {\cf22 "       HORAS EXTRAS "} << horasExtras << std::endl;\par
00153     std::cout << {\cf22 "       FERIADOS "} << feriados << std::endl;\par
00154     std::cout << {\cf22 "       SUB TOTAL "} << subTotal << std::endl;\par
00155     std::cout << {\cf22 "       FONDOS RESERVA "} << fondosReserva << std::endl;\par
00156     std::cout << {\cf22 "       TOTAL INGRESOS "} << totalIngresos << std::endl;\par
00157     std::cout << {\cf22 "       RETENCION IESS "} << retencionIess << std::endl;\par
00158     std::cout << {\cf22 "       PRESTAMO IESS "} << desPrestamoIess << std::endl;\par
00159     std::cout << {\cf22 "       TOTAL RETENCION "} << totalRetencion << std::endl;\par
00160     std::cout << {\cf22 "       SUELDO NETO A RECIBIR "} << netoRecibir << std::endl;\par
00161     std::cout << {\cf22 "\\n"};\par
00162 \}\par
00163 \par
00164 std::string RolDePago::toString() \{\par
00165     {\cf19 return} empleado.get_cedula() + {\cf22 ","} +\par
00166         std::to_string(sueldo) + {\cf22 ","} +\par
00167         std::to_string(horasExtras) + {\cf22 ","} +\par
00168         std::to_string(feriados) + {\cf22 ","} +\par
00169         std::to_string(subTotal) + {\cf22 ","} +\par
00170         std::to_string(fondosReserva) + {\cf22 ","} +\par
00171         std::to_string(totalIngresos) + {\cf22 ","} +\par
00172         std::to_string(retencionIess) + {\cf22 ","} +\par
00173         std::to_string(desPrestamoIess) + {\cf22 ","} +\par
00174         std::to_string(totalRetencion) + {\cf22 ","} +\par
00175         std::to_string(netoRecibir);\par
00176 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/RolDePago.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/RolDePago.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/RolDePago.h}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Empleado.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RolDePago}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RolDePago.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/RolDePago.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/RolDePago.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include "Empleado.h"}\par
00003 {\cf17 class }RolDePago\par
00004 \{\par
00005 {\cf17 private}:\par
00006     Empleado empleado;\par
00007     {\cf18 float} sueldo;\par
00008     {\cf18 float} horasExtras;\par
00009     {\cf18 float} feriados;\par
00010     {\cf18 float} subTotal;\par
00011     {\cf18 float} fondosReserva;\par
00012     {\cf18 float} totalIngresos;\par
00013     {\cf18 float} retencionIess;\par
00014     {\cf18 float} desPrestamoIess;\par
00015     {\cf18 float} totalRetencion;\par
00016     {\cf18 float} netoRecibir;\par
00017     \par
00018 {\cf17 public}:\par
00019     RolDePago(Empleado, {\cf18 float}, {\cf18 float}, {\cf18 float}, {\cf18 float}, {\cf18 float}, {\cf18 float}, {\cf18 float}, {\cf18 float}, {\cf18 float},{\cf18 float});\par
00020     RolDePago(Empleado, {\cf18 float}, {\cf18 float}, {\cf18 float},{\cf18 float});\par
00021     RolDePago() = {\cf19 default};\par
00022     Empleado get_empleado();\par
00023     {\cf18 float} get_sueldo();\par
00024     {\cf18 float} get_horasExtra();\par
00025     {\cf18 float} get_feriados();\par
00026     {\cf18 float} get_subTotal();\par
00027     {\cf18 float} get_fondosReserva();\par
00028     {\cf18 float} get_totalIngreso();\par
00029     {\cf18 float} get_retencionIess();\par
00030     {\cf18 float} get_prestamoIess();\par
00031     {\cf18 float} get_totalRetencion();\par
00032     {\cf18 float} get_netoRecibir();\par
00033     {\cf18 void} set_sueldo({\cf18 float});\par
00034     {\cf18 void} set_horasExtra({\cf18 float});\par
00035     {\cf18 void} set_feriados({\cf18 float});\par
00036     {\cf18 void} set_subTotal({\cf18 float});\par
00037     {\cf18 void} set_fondosReserva({\cf18 float});\par
00038     {\cf18 void} set_totalIngreso({\cf18 float});\par
00039     {\cf18 void} set_retencionIess({\cf18 float});\par
00040     {\cf18 void} set_prestamoIess({\cf18 float});\par
00041     {\cf18 void} set_totalRetencion({\cf18 float});\par
00042     {\cf18 void} set_netoRecibir({\cf18 float});    \par
00043     {\cf18 void} imprimirDatos();\par
00044     std::string toString();\par
00045 \};\par
00046 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Validacion.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Validacion.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Validacion.h}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ListaCircularDoble.h"}\par
{\f2 #include <string>}\par
{\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <limits>}\par
{\f2 #include <random>}\par
{\f2 #include <cctype>}\par
{\f2 #include <regex>}\par
{\f2 #include <iomanip>}\par
{\f2 #include <sstream>}\par
{\f2 #include <cfloat>}\par
{\f2 #include <Windows.h>}\par
{\f2 #include <conio.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Validacion}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Validacion.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Validacion.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Github/Grupo_20_Estructura_de_Datos/Primer Parcial/Rol_Pagos/Rol_Pagos/Validacion.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include "ListaCircularDoble.h"}\par
00003 {\cf21 #include <string>}\par
00004 {\cf21 #include <iostream>}\par
00005 {\cf21 #include <fstream>}\par
00006 {\cf21 #include <algorithm>}\par
00007 {\cf21 #include <limits>}\par
00008 {\cf21 #include <random>}\par
00009 {\cf21 #include <cctype>}\par
00010 {\cf21 #include <regex>}\par
00011 {\cf21 #include <iomanip>}\par
00012 {\cf21 #include <sstream>}\par
00013 {\cf21 #include <cfloat>}\par
00014 {\cf21 #include <Windows.h>}\par
00015 {\cf21 #include <conio.h>}\par
00016 \par
00017 {\cf17 using namespace }std;\par
00018 \par
00019 {\cf17 class }Validacion\par
00020 \{\par
00021 {\cf17 public}:\par
00022     {\cf17 static} {\cf18 void} limpiar_consola() \{\par
00023         COORD topLeft = \{ 0, 0 \};\par
00024         HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);\par
00025         CONSOLE_SCREEN_BUFFER_INFO screen;\par
00026         DWORD written;\par
00027 \par
00028         GetConsoleScreenBufferInfo(console, &screen);\par
00029         FillConsoleOutputCharacterA(\par
00030             console, {\cf23 ' '}, screen.dwSize.X * screen.dwSize.Y, topLeft, &written);\par
00031         FillConsoleOutputAttribute(\par
00032             console, FOREGROUND_GREEN | FOREGROUND_RED | FOREGROUND_BLUE,\par
00033             screen.dwSize.X * screen.dwSize.Y, topLeft, &written);\par
00034         SetConsoleCursorPosition(console, topLeft);\par
00035     \}\par
00036 \par
00037     {\cf17 static} std::string leer_cadena({\cf17 const} std::string etiqueta, {\cf18 bool} permitir_vacio = {\cf17 false}) \{\par
00038         std::string leido;\par
00039 \par
00040         {\cf19 if} (permitir_vacio) \{\par
00041             std::getline(std::cin, leido);\par
00042         \}\par
00043         {\cf19 else} \{\par
00044             {\cf19 while} ((std::cout << etiqueta),\par
00045                 std::getline(std::cin, leido), leido.empty())\par
00046                 ;\par
00047         \}\par
00048 \par
00049         {\cf19 return} leido;\par
00050     \}\par
00051 \par
00052     {\cf17 static} std::string leer_cadena_regex({\cf17 const} std::string etiqueta, std::string regex) \{\par
00053         std::string leido;\par
00054         std::regex cadena_regex(regex);\par
00055 \par
00056         {\cf19 do} \{\par
00057             leido = leer_cadena(etiqueta);\par
00058 \par
00059             {\cf19 if} (!std::regex_match(leido, cadena_regex)) \{               \par
00060                 cout << {\cf22 "Formato invalido"}<<endl;\par
00061                 cout << {\cf22 "Reingresar: "};\par
00062             \}\par
00063         \} {\cf19 while} (!std::regex_match(leido, cadena_regex));\par
00064 \par
00065         {\cf19 return} leido;\par
00066     \}\par
00067 \par
00068     {\cf17 static} {\cf18 int} leer_entero(std::string etiqueta, {\cf18 int} minimo = INT_MIN, {\cf18 int} maximo = INT_MAX) \{\par
00069         {\cf18 int} leido;\par
00070         {\cf18 bool} valido;\par
00071 \par
00072         {\cf19 do} \{\par
00073             std::cout << etiqueta;\par
00074             std::cin >> leido;\par
00075 \par
00076             valido = !std::cin.fail();\par
00077 \par
00078             std::cin.clear();\par
00079             std::cin.ignore();\par
00080         \} {\cf19 while} (!valido || leido < minimo || leido > maximo);\par
00081 \par
00082         {\cf19 return} leido;\par
00083     \}\par
00084 \par
00085     {\cf17 static} {\cf18 bool} cadenas_iguales(std::string a, std::string b) \{\par
00086         a = trim_cadena(cadena_minusculas(a));\par
00087         b = trim_cadena(cadena_minusculas(b));\par
00088 \par
00089         {\cf19 return} a == b;\par
00090     \}\par
00091 \par
00092     {\cf17 static} {\cf18 float} leer_flotante(std::string etiqueta, {\cf18 float} minimo = DBL_MIN, {\cf18 float} maximo = DBL_MAX) \{\par
00093         {\cf18 float} leido;\par
00094         {\cf18 bool} valido;\par
00095 \par
00096         {\cf19 do} \{\par
00097             std::cout << etiqueta;\par
00098             leido=Validacion::ingresar_DatosReales();\par
00099 \par
00100             valido = !std::cin.fail();\par
00101 \par
00102             std::cin.clear();\par
00103             std::cin.ignore();          \par
00104         \} {\cf19 while} (!valido || leido < minimo || leido > maximo);\par
00105 \par
00106         {\cf19 return} leido;\par
00107     \}\par
00108 \par
00109     {\cf17 static} {\cf18 bool} cedula_valida({\cf17 const} std::string cedula) \{\par
00110         {\cf19 if} (cedula.length() != 10) \{\par
00111             {\cf19 return} {\cf17 false};\par
00112         \}\par
00113 \par
00114         {\cf18 int} sum_par = 0;\par
00115         {\cf18 int} sum_impar = 0;\par
00116         {\cf18 int} sum;\par
00117         {\cf18 int} i = 1;\par
00118 \par
00119         std::string digits = cedula.substr(0, cedula.size() - 1);\par
00120 \par
00121         {\cf19 for} ({\cf18 char}& c : digits) \{\par
00122             {\cf18 int} digit = c - {\cf23 '0'};\par
00123             {\cf19 if} (i % 2 == 0) \{\par
00124                 sum_par += digit;\par
00125             \}\par
00126             {\cf19 else} \{\par
00127                 {\cf19 if} ((digit * 2) > 9) \{\par
00128                     sum_impar += (digit * 2) - 9;\par
00129                 \}\par
00130                 {\cf19 else} \{\par
00131                     sum_impar += (digit * 2);\par
00132                 \}\par
00133             \}\par
00134             i++;\par
00135         \}\par
00136 \par
00137         sum = sum_par + sum_impar;\par
00138 \par
00139         {\cf18 int} verifier = cedula.at(cedula.size() - 1) - {\cf23 '0'};\par
00140         {\cf18 int} higher = (10 - (sum % 10)) + sum;\par
00141 \par
00142         {\cf19 if} (sum % 10 == 0) \{\par
00143             {\cf19 return} verifier == 0;\par
00144         \}\par
00145 \par
00146         {\cf19 return} (higher - sum) == verifier;\par
00147     \}\par
00148 \par
00149     {\cf17 static} ListaCircularDoble<std::string> dividir_cadena(std::string cadena, std::string delimitador) \{\par
00150         ListaCircularDoble<std::string> partes;\par
00151         {\cf18 size_t} start = 0;\par
00152         {\cf17 auto} end = cadena.find(delimitador);\par
00153 \par
00154         {\cf19 while} (end != std::string::npos) \{\par
00155             std::string parte = cadena.substr(start, end - start);\par
00156             partes.insertarFinal(parte);\par
00157             start = end + delimitador.length();\par
00158             end = cadena.find(delimitador, start);\par
00159         \}\par
00160 \par
00161         partes.insertarFinal(cadena.substr(start, end));\par
00162         {\cf19 return} partes;\par
00163     \}\par
00164     \par
00165 \par
00166 \par
00167     {\cf17 static} std::string trim_cadena(std::string cadena) \{\par
00168         {\cf17 auto} wsfront = std::find_if_not(cadena.begin(), cadena.end(), []({\cf18 int} c) \{ return std::isspace(c); \});\par
00169         {\cf17 auto} wsback = std::find_if_not(cadena.rbegin(), cadena.rend(), []({\cf18 int} c) \{ return std::isspace(c); \}).base();\par
00170         {\cf19 return} (wsback <= wsfront ? std::string() : std::string(wsfront, wsback));\par
00171     \}\par
00172 \par
00173     {\cf17 static} {\cf18 void} leer_lineas(\par
00174         std::string nombre_archivo,\par
00175         std::function<{\cf18 void}(std::string linea, ListaCircularDoble<std::string> datos)> callback) \{\par
00176         std::ifstream archivo(nombre_archivo);\par
00177         std::string linea;\par
00178 \par
00179         {\cf19 while} (std::getline(archivo, linea)) \{\par
00180             linea = Validacion::trim_cadena(linea);\par
00181 \par
00182             {\cf19 if} (linea.empty()) \{\par
00183                 {\cf19 continue};\par
00184             \}\par
00185 \par
00186             {\cf17 auto} columnas = Validacion::dividir_cadena(linea, {\cf22 ","});\par
00187             {\cf18 int} indice = 0;\par
00188 \par
00189             columnas.recorrer([&](std::string token) \{\par
00190                 columnas.getPosicion(indice)->set_dato(Validacion::trim_cadena(token));\par
00191             indice++;\par
00192                 \});\par
00193 \par
00194             callback(linea, columnas);\par
00195         \}\par
00196 \par
00197         archivo.close();\par
00198     \}\par
00199     \par
00200 \par
00201     {\cf17 static} std::string cadena_minusculas(std::string cadena) \{\par
00202         std::string resultado(cadena);\par
00203 \par
00204         std::transform(resultado.begin(), resultado.end(), resultado.begin(), []({\cf18 unsigned} {\cf18 char} c) \{\par
00205             return std::tolower(c);\par
00206             \});\par
00207 \par
00208         {\cf19 return} resultado;\par
00209     \}   \par
00210 \par
00211     {\cf17 static} {\cf18 bool} existe_archivo(std::string nombre_archivo) \{\par
00212         {\cf19 return} std::ifstream(nombre_archivo.c_str()).good();\par
00213     \}\par
00214 \par
00215     {\cf17 static} {\cf18 int} generar_aleatorio({\cf18 int} minimo = INT_MIN, {\cf18 int} maximo = INT_MAX) \{\par
00216         std::random_device rd;\par
00217         {\cf17 static} std::mt19937 gen(rd());\par
00218         std::uniform_int_distribution<> dis(minimo, maximo);\par
00219 \par
00220         {\cf19 return} dis(gen);\par
00221     \}\par
00222     \par
00223 \par
00224     {\cf17 static} std::string decimal_fixed({\cf18 float} valor, {\cf18 int} precision = 2) \{\par
00225         std::stringstream ss;\par
00226         ss << std::fixed << std::setprecision(precision) << valor;\par
00227         {\cf19 return} ss.str();\par
00228     \}\par
00229 \par
00230     \par
00231 \par
00232     {\cf17 static} {\cf18 int} ingresar_DatosEnteros()\par
00233     \{\par
00234         {\cf18 char}* dato = {\cf17 new} {\cf18 char}[10], c;\par
00235         {\cf18 int} i = 0;      \par
00236         {\cf19 while} ((c = _getch()) != 13) \{\par
00237             {\cf19 if} (c >= {\cf23 '0'} && c <= {\cf23 '9'}) \{\par
00238                 printf({\cf22 "%c"}, c);\par
00239                 dato[i++] = c;\par
00240             \}\par
00241             {\cf19 else} {\cf19 if} (c == 8 || c == 127) \{\par
00242                 printf({\cf22 "\\b \\b"});\par
00243                 dato[i--] = 0;\par
00244             \}\par
00245         \}\par
00246         dato[i] = {\cf23 '\\0'};\par
00247         {\cf19 return} atoi(dato);\par
00248     \}\par
00249 \par
00250     {\cf17 static} {\cf18 float} ingresar_DatosReales()\par
00251     \{\par
00252         {\cf18 char}* dato = {\cf17 new} {\cf18 char}[10], c;\par
00253         {\cf18 int} i = 0, punto = 0;       \par
00254         {\cf19 while} ((c = _getch()) != 13) \{\par
00255             {\cf19 if} (c >= {\cf23 '0'} && c <= {\cf23 '9'}) \{\par
00256                 printf({\cf22 "%c"}, c);\par
00257                 dato[i++] = c;\par
00258             \}\par
00259             {\cf19 else} {\cf19 if} (c == 8 || c == 127) \{\par
00260                 printf({\cf22 "\\b \\b"});\par
00261                 dato[i--] = 0;\par
00262             \}\par
00263             {\cf19 else} {\cf19 if} (c == {\cf23 '.'} && punto == 0) \{\par
00264                 printf({\cf22 "%c"}, c);\par
00265                 dato[i++] = c;\par
00266                 punto--;\par
00267             \}\par
00268         \}\par
00269         dato[i] = {\cf23 '\\0'};\par
00270         {\cf19 return} atof(dato);\par
00271     \}\par
00272 \};\par
00273 \par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par 
\pard\plain 
{\tc \v \'CDndice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
